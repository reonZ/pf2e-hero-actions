{"version":3,"file":"main.js","mappings":"mBAAO,IAAI,EAAY,GACZ,EAAO,SCUX,SAASA,IACZ,OALuDC,EAKtC,EAJVC,KAAKC,QAAQC,IAAIH,GADrB,IAAoDA,CAM3D,CCXO,SAAS,KAA8BI,GAC1C,MAAO,GAAG,cAAsBA,EAAKC,KAAK,MAC9C,CAEO,SAASC,KAAmBF,GAC/B,MAAO,SAAS,KAAaA,EAAKC,KAAK,MAC3C,CAEO,SAASE,KAAgBH,GAE5B,OADAA,EAAOA,EAAKI,QAAOC,GAAkB,iBAANA,IACxB,GAAG,MAAS,eAAuBL,EAAKC,KAAK,MACxD,CCVO,SAASK,EAA0BC,GACtC,OAAOV,KAAKW,SAAST,IAAI,EAAWQ,EACxC,CAWO,SAASE,EACZC,GAEA,MAAMC,EAAOD,EAAQC,KACrBD,EAAQE,MAAQF,EAAQE,OAAS,QACjCF,EAAQG,OAASH,EAAQG,SAAU,EAC/BH,EAAQG,SACRH,EAAQC,KAAO,EAA2BA,EAAM,QAChDD,EAAQI,KAAO,EAA2BH,EAAM,SAEhDI,MAAMC,QAAQN,EAAQO,WACtBP,EAAQO,QAAUP,EAAQO,QAAQC,QAAO,CAACD,EAASE,KAC/CF,EAAQE,GAAU,EAA2BR,EAAM,UAAWQ,GACvDF,IACR,CAAC,IAERpB,KAAKW,SAASY,SAAmB,EAAWT,EAAMD,EACtD,CC3BO,SAASW,EAAkDC,GAC9DzB,KAAK0B,OAAOC,KAAK,UAAU,IAAaF,EAC5C,CCIO,SAASG,EAA2BC,EAAsBnB,EAAaoB,GAC1E,OAAQD,EAAID,QAAQ,EAAWlB,IAA0BoB,CAC7D,CASO,SAASC,EAAQF,EAAsBnB,EAAasB,GACvD,OAAOH,EAAIE,QAAQ,EAAWrB,EAAKsB,EACvC,CCrBA,SAASC,EACLC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAuB,iBAATH,EAAoBA,EAAO,OACzCI,EAAuB,iBAATJ,EAAoBA,EAAuB,iBAATC,EAAoBA,OAAOI,EAC3EC,EAA4B,kBAATN,EAAqBA,EAAuB,kBAATC,EAAqBA,EAAOC,IAAQ,EAEhGK,GAAGC,cAAcV,OAAOW,EAASV,EAAKK,GAAOD,EAAM,CAAEG,aACzD,CAEO,SAASI,KAAQC,GACpB,MAAOZ,EAAKC,EAAMC,GAAQU,EAC1Bb,EAAOC,EAAK,UAAWC,EAAMC,EACjC,CAEO,SAASW,KAAQD,GACpB,MAAOZ,EAAKC,EAAMC,GAAQU,EAC1Bb,EAAOC,EAAK,OAAQC,EAAMC,EAC9B,CAEO,SAASY,KAASF,GACrB,MAAOZ,EAAKC,EAAMC,GAAQU,EAC1Bb,EAAOC,EAAK,QAASC,EAAMC,EAC/B,CCzBO,SAASQ,KAAYE,GACxB,IAAKpC,EAAK6B,GAAQO,EAElB,OADApC,EAAM,GAAG,KAAaA,IAClB6B,EAAavC,KAAKiD,KAAKC,OAAOxC,EAAK6B,GAChCvC,KAAKiD,KAAKL,SAASlC,EAC9B,CAcO,SAASyC,EAAYC,GACxB,MAAMC,EAAK,IAAIP,IAAuBF,EAAS,GAAGQ,KAAUN,EAAK,KAAMA,EAAK,IAmC5E,OAjCAQ,OAAOC,iBAAiBF,EAAI,CACxBR,KAAM,CACFb,MAAO,IAAIc,IAAqBD,EAAK,GAAGO,KAAUN,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC3EU,YAAY,EACZC,cAAc,GAElBV,KAAM,CACFf,MAAO,IAAIc,IAAqBC,EAAK,GAAGK,KAAUN,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC3EU,YAAY,EACZC,cAAc,GAElBT,MAAO,CACHhB,MAAO,IAAIc,IAAqBE,EAAM,GAAGI,KAAUN,EAAK,KAAMA,EAAK,GAAIA,EAAK,IAC5EU,YAAY,EACZC,cAAc,GAElBC,IAAK,CACD1B,MAAQtB,GAhCb,SAAyBA,GAC5B,OAAOV,KAAKiD,KAAKS,IAAI,GAAG,KAAahD,KAAO,EAChD,CA8BoCiD,CAAgB,GAAGP,KAAU1C,KACrD8C,YAAY,EACZC,cAAc,GAElBtD,KAAM,CACF6B,MAAQtB,GAjCb,SAAsBA,GACzB,MAAO,GAAG,KAAaA,GAC3B,CA+BoCkD,CAAa,GAAGR,KAAU1C,KAClD8C,YAAY,EACZC,cAAc,GAElBI,SAAU,CACN7B,MAAO,CAACtB,GAAeoD,UAA6CT,EAAG3C,EAAKoD,GAC5EN,YAAY,EACZC,cAAc,KAIfJ,CAQX,CCpEO,SAASU,EAASC,EAAclD,GACnC,OAAIA,EAAa,SAASkD,MAASlD,KAC5B,SAASkD,IACpB,CC2BOC,eAAeC,EAAgBC,GAClC,MAAM,OAAEC,EAAM,SAAEC,GAAaF,EACvBG,EAActE,KAAKuE,OAAOrE,IAAIkE,EAAOI,KACrCC,EAAgBzE,KAAKuE,OAAOrE,IAAImE,EAASG,KAE/C,IAAKF,IAAgBG,EAEjB,YADAC,EAAeP,GAInB,MAAMQ,EAAgB/C,EAAsB0C,EAAa,gBAAkB,GACrEM,EAAkBhD,EAAsB6C,EAAe,gBAAkB,GAEzEI,EAAoBF,EAAcG,WAAUtE,GAAKA,EAAEwD,OAASI,EAAOJ,OACnEe,EAAsBH,EAAgBE,WAAUtE,GAAKA,EAAEwD,OAASK,EAASL,OAE/E,IAA2B,IAAvBa,IAAqD,IAAzBE,EAE5B,YADAL,EAAeP,GAInB,MAAMa,EAAeL,EAAcM,OAAOJ,EAAmB,GAAG,GAC1DK,EAAiBN,EAAgBK,OAAOF,EAAqB,GAAG,GAEtEJ,EAAcQ,KAAKD,GACnBN,EAAgBO,KAAKH,GAErBjD,EAAQuC,EAAa,cAAeK,GACpC5C,EAAQ0C,EAAe,cAAeG,GAEtC,IAAIQ,EAAU,QAAQxC,EAAS,sBAAuB,CAAEyC,MAAOtB,EAASiB,EAAahB,gBACrFoB,GAAW,QAAQxC,EAAS,wBAAyB,CAAE0C,QAASvB,EAASmB,EAAelB,gBAExFuB,YAAYC,OAAO,CACfC,OAAQ,sBAAsB7C,EAAS,uBAAwB,CAAE9B,KAAM2D,EAAc3D,cACrFsE,UACAM,QAASH,YAAYI,WAAW,CAAEC,MAAOtB,KAEjD,CAEOL,eAAe4B,GAAgB,SAAExB,IAEpCxB,EAAK,iBAAkB,CAAE/B,KADXd,KAAKuE,OAAOrE,IAAImE,EAASG,KACF1D,OAAQ,EACjD,CAEO,SAASgF,EAAaC,GACzB/C,EAAM,cACV,CA0BA,SAASgD,EAAc7B,GACfnE,KAAKiG,KAAKC,KACVhC,EAAgBC,GAIpB3C,EAA8B,IACvB2C,EACH7B,KAAM,gBAEd,CAEA,SAASoC,GAAe,OAAEN,EAAM,SAAEC,GAAuBrB,EAAoB,eACzE,MAAMmD,EAAQ,IAAIC,IAAI,CAAChC,EAAOrE,GAAIsE,EAAStE,KAEvCoG,EAAMzC,IAAI1D,KAAKiG,KAAKlG,MACpBoG,EAAME,OAAOrG,KAAKiG,KAAKlG,IACvB+F,KAGCK,EAAMG,MAEX9E,EAA6B,CACzBc,KAAM,cACN6D,MAAOjF,MAAMqF,KAAKJ,GAClBnD,SAER,CC1HO,MAAMwD,cAAcC,YACfC,OACAC,QAERC,YAAYhB,GACRiB,MAAM,CAAE9G,GAAI,2BAA2B6F,EAAM7F,OAC7C+G,KAAKJ,OAASd,CAClB,CAEWmB,4BACP,OAAOC,YAAYH,MAAME,eAAgB,CACrCE,MAAOrE,EAAS,yBAChBiB,SAAUvD,EAAa,aACvB4G,MAAO,IACPC,OAAQ,QAEhB,CAEIvB,YACA,OAAOkB,KAAKJ,MAChB,CAEIU,aACA,OAAON,KAAKH,OAChB,CAEIS,WAAOpF,GACFA,EAIDA,IAAU8E,KAAKH,iBACZG,KAAKM,QAAQC,OAAOP,KAAKQ,OAChCR,KAAKH,QAAU3E,EACf8E,KAAKS,UANDvE,EAAM,4BAOd,CAEAwE,QAAQ3G,GACJ,OAAOmG,YAAYH,MAAMW,UAAW,CAChC5B,MAAOkB,KAAKlB,MACZwB,OAAQN,KAAKM,OACbK,QAASzH,KAAKuE,OAAOhE,QAAOC,GAAgB,cAAXA,EAAE8B,MAAwB9B,EAAET,KAAO+G,KAAKlB,MAAM7F,IAAMS,EAAEkH,iBACvFC,QAASC,EAAed,KAAKlB,OAC7BiC,cAAef,KAAKM,OAASQ,EAAed,KAAKM,QAAU,GAC3DnE,KAAME,EAAY,oBAE1B,CAEA2E,kBAAkBC,GACdlB,MAAMiB,kBAAkBC,GACxBA,EAAKC,KAAK,yBAAyBC,GAAG,SAAUnB,MAAK,EAAgBoB,KAAKpB,OAC1EiB,EAAKC,KAAK,+BAA+BC,GAAG,QAASnB,MAAK,EAAeoB,KAAKpB,OAC9EiB,EAAKC,KAAK,yBAAyBC,GAAG,QAASnB,MAAK,EAAaoB,KAAKpB,OACtEiB,EAAKC,KAAK,0BAA0BC,GAAG,SAAS,IAAMnB,KAAKqB,SAC/D,CAEAZ,OAAOa,EAA6BvH,GAGhC,OAFAiG,KAAKlB,MAAMyB,KAAKP,KAAKQ,OAASR,KAC1BA,KAAKM,SAAQN,KAAKM,OAAOC,KAAKP,KAAKQ,OAASR,MACzCD,MAAMU,OAAOa,EAAOvH,EAC/B,CAEAoD,YAAYpD,SACFgG,MAAMsB,MAAMtH,UACXiG,KAAKlB,MAAMyB,OAAOP,KAAKQ,cACvBR,KAAKM,QAAQC,OAAOP,KAAKQ,MACpC,CAEA,KACI,IAAKR,KAAKM,OAEN,YADAvE,EAAK,6BAIT,MAAMwF,EAASvB,KAAKwB,QAAQN,KAAK,2BAA2BO,MACtDnB,EAASN,KAAKwB,QAAQN,KAAK,iCAAiCO,MAElE,GAAsB,iBAAXF,GAAyC,iBAAXjB,EAErC,YADAvE,EAAK,6BAIT,IAAIoD,EC1FL,SAA2BL,EAAc4C,GAAY,GACxD,OAAIA,EAAkBxI,KAAKmG,MAAM6B,MAAKxH,GAAKA,EAAEiI,QAAUjI,EAAEkI,YAAc9C,IAChE5F,KAAKmG,MAAM6B,MAAKxH,GAAKA,EAAEkI,YAAc9C,GAChD,CDuFmB+C,CAAkB7B,KAAKM,QAAQ,IErE3C,SAAkBvF,EAAsB2G,GAAY,GACvD,OAAIA,EAAkBxI,KAAKmG,MAAM6B,MAAKxH,GAAKA,EAAEiI,QAAU5G,EAAI+G,mBAAmBpI,EAAG,WAC1ER,KAAKmG,MAAM6B,MAAKxH,GAAKqB,EAAI+G,mBAAmBpI,EAAG,UAC1D,CFkE2DqI,CAAS/B,KAAKM,QAAQ,IEnFtEpH,KAAKmG,MAAM6B,MAAK/B,GAAQA,EAAKwC,QAAUxC,EAAKC,OHwEhD,IAA0B/B,ECYpB8B,IDZoB9B,ECiBR,CACbC,OAAQ,CACJrE,GAAIC,KAAKiG,KAAKlG,GACdyE,IAAKsC,KAAKlB,MAAM7F,GAChBiE,KAAMqE,GAEVhE,SAAU,CACNtE,GAAIkG,EAAKlG,GACTyE,IAAKsC,KAAKM,OAAOrH,GACjBiE,KAAMoD,KDzBR/C,SAAStE,KAAOC,KAAKiG,KAAKlG,GAKpCyB,EAA+B,IACxB2C,EACH7B,KAAM,kBANN0D,EAAc7B,GC4Bd2C,KAAKqB,SAjBDtF,EAAK,0BAkBb,CAEAoB,QAAqB6E,GACjB,MAAM9E,EAAO+E,EAAED,EAAME,eAAeC,SAAS,SAASV,MAChDW,QAAcC,SAAuBnF,GAC3CkF,GAAOE,MAAM7B,QAAO,EACxB,CAEA,GAAgBuB,GACZ,MAAM/I,EAAM+I,EAAME,cAAoChH,MACtD8E,KAAKM,OAASpH,KAAKuE,OAAOrE,IAAmBH,EACjD,EGjHJ,MAAMsJ,EAAY,uBAGZC,EAAa,mDACbC,EAAO,yDAEbtF,eAAeuF,EAAiBxF,GAC5B,IAAKA,EAAM,OACX,MAAMyF,QAAcN,SAASnF,GAC7B,OAAOyF,GAASA,aAAiBC,UAAYD,OAAQjH,CACzD,CAMOyB,eAAe0F,IAClB,OAAO3J,KAAK4J,OAAO5B,MAAKxH,GAAKA,EAAEoB,QAAQ,OAAQ,cAAgB0H,GACnE,CAUO,SAAS1B,EAAehC,GAC3B,MAAM+B,EAAU/F,EAAoCgE,EAAO,gBAAkB,GACvEiE,EAAO7J,KAAK8J,MAAM5J,IAAImJ,GAE5B,OAAO1B,EACFoC,KAAI1B,IACD,GAAsB,iBAAXA,EAAqB,OAAOA,EACvC,IAAKwB,EAAM,OACX,MAAMX,EAAQW,EAAKG,MAAM9J,IAAImI,GAC7B,OAAKa,EACE,CAAEpI,KAAMoI,EAAMpI,KAAMkD,KAAM,cAAcqF,KAAaH,EAAMe,YADlE,CACyE,IAE5E1J,QAAOC,GAAKA,GACrB,CAEOyD,eAAeiG,EAActE,EAAsB5B,GACtD,MAAMmG,EAASvE,EAAMwE,WAAWpI,MAChC,GAAImI,EAAS,EAAG,OAAOtH,EAAK,gBAE5B,MAAM8E,EAAUC,EAAehC,GAEzBoE,EAAQrC,EAAQ7C,WAAUtE,GAAKA,EAAEwD,OAASA,IAChD,IAAe,IAAXgG,EAAc,OAElB,MAAMK,QAAgBC,EAAqBtG,GACtCqG,GAASrH,EAAM,iBAEpB2E,EAAQ1C,OAAO+E,EAAO,GAElBK,GACAzE,EAAM2E,OAAO,CACT,oCAAuCJ,EAAS,EAChD,CAAC9J,EAAgB,gBAAiBsH,IAGtCpC,YAAYC,OAAO,CACfC,OAAQ,sBAAsB7C,EAAS,6BACvCwC,QAAS,OAAOiF,EAAQvJ,YAAYuJ,EAAQG,cAC5C9E,QAASH,YAAYI,WAAW,CAAEC,aAEnC7D,EAAQ6D,EAAO,cAAe+B,EACzC,CAEO1D,eAAeqG,EAAqBtG,GACvC,MAAMyG,QAAiBtB,SAASnF,GAChC,KAAMyG,aAAoBC,cAAe,OAEzC,MAAMC,EAAOF,EAASG,MAAMC,SAAS,GAErC,IAAIC,EAAOH,GAAMG,KAAK1F,QAGtB,OAFI0F,GAAQL,EAASZ,OAASR,IAAWyB,EAAOA,EAAKC,QAAQ,OAAQ,iCAE9DD,EAAO,CAAEhK,KAAM2J,EAAS3J,KAAM0J,YAAaM,QAAStI,CAC/D,CAEO,SAASwI,EAAepF,EAAsB+B,GACjD,OAAO5F,EAAQ6D,EAAO,cAAe+B,EACzC,CAEO,SAASsD,EAAeC,GAAS,EAAMzB,GAC1C,MAAM0B,EAAS,CACXrK,KAAM8B,EAAS,cACfwI,aAAcF,EACdG,IAAK9B,EACLiB,YAAa5H,EAAS,sBAE1B,OAAK6G,EACEzC,YAAYsE,UAAU7B,EAAM8B,SAAUJ,GAD1BA,CAEvB,CAaOlH,eAAeuH,IAClB,MAAM/B,QAtFHxF,iBACH,aALGA,iBACH,OAAOuF,EAAiB/I,EAAW,aACvC,CAGkBgL,UAA4B9B,WAbvC1F,iBACH,OAAOuF,EAAiBF,EAC5B,CAWgFoC,EAChF,CAoFwBC,GAEpB,IAAKlC,EAED,OADAzG,EAAM,mBAAmB,GAClB,KAGX,IAAKyG,EAAMmC,QAAS,CAChB,IAAI5L,KAAKiG,KAAKC,KAQV,OADAlD,EAAM,mBAAmB,GAClB,KAPP,GAAIyG,EAAMoC,WAEN,OADA7I,EAAM,6BAA6B,GAC5B,WAELyG,EAAMqC,W,EAOM,IAAtBrC,EAAM2B,cACW3B,EAAMsC,QAAQC,MAAKC,IAAMA,EAAEC,eACvBzC,EAAM0C,gBAG/B,MAAMC,SAAc3C,EAAM2C,KAAK,CAAEC,aAAa,KAAUN,QAAQ,GAChE,IAAKK,EAAM,OAEX,MAAMpI,GLpIkCsI,EKoICF,GLnI9B9J,OAASiK,MAAMC,mBAAmBC,SAAiB,GAAGH,EAAOI,sBAAsBJ,EAAOK,aACjGL,EAAOhK,OAASiK,MAAMC,mBAAmBI,WAAmB,cAAcN,EAAOI,sBAAsBJ,EAAOK,kBAAlH,EAFG,IAAqCL,EKqIxC,OAAItI,EAAa,CAAEA,OAAMlD,KAAMsL,EAAKtB,WAApC,CACJ,CAEO7G,eAAe4I,EAAgBjH,GAClC,MAAM+B,EAAUC,EAAehC,GACzBkH,EAAKlH,EAAMwE,WAAWpI,MAAQ2F,EAAQoF,OAEtCb,EAAoC,GAC1C,IAAK,IAAIc,EAAI,EAAGA,EAAIF,EAAIE,IAAK,CACzB,MAAM3E,QAAemD,IAErB,QAAehJ,IAAX6F,EAAJ,CACK,GAAe,OAAXA,EAAiB,OAE1BV,EAAQxC,KAAKkD,GACb6D,EAAM/G,KAAKkD,EAHqB,C,CAMpC,IAAK6D,EAAMa,OAAQ,OAEnB/B,EAAepF,EAAO+B,GAEtB,MAAMsF,EAAUf,EAAMnC,KAAIvJ,GAAKuD,EAASvD,EAAEwD,KAAMxD,EAAEM,QAClDyE,YAAYC,OAAO,CACfC,OAAQ,sBAAsB7C,EAAS,sBAAuB,CAAEkK,GAAIG,EAAQF,gBAC5E3H,QAAS6H,EAAQlD,KAAIvJ,GAAK,QAAQA,YAAWJ,KAAK,IAClDsF,QAASH,YAAYI,WAAW,CAAEC,MAAOA,KAEjD,CAEO3B,eAAeiJ,EAAiBtH,EAAsB5B,GACzD,MAAMqG,QAAgBC,EAAqBtG,GAC3C,IAAKqG,EAAS,OAAOrH,EAAM,mBAE3BuC,YAAYC,OAAO,CACfJ,QAAS,OAAOiF,EAAQvJ,YAAYuJ,EAAQG,cAC5C9E,QAASH,YAAYI,WAAW,CAAEC,MAAOA,KAEjD,CAEO3B,eAAekJ,EAAmBvH,EAAsBwH,GAC3DA,EAAyB,iBAAVA,EAAqB,CAACA,GAASA,EAE9C,MAAMzF,EAAUC,EAAehC,GACzByH,EAAwB,GAE9B,IAAK,MAAMrJ,KAAQoJ,EAAO,CACtB,MAAMpD,EAAQrC,EAAQ7C,WAAUtE,GAAKA,EAAEwD,OAASA,KACjC,IAAXgG,IACJqD,EAAQlI,KAAKwC,EAAQqC,IACrBrC,EAAQ1C,OAAO+E,EAAO,G,CAG1BgB,EAAepF,EAAO+B,GAEtB,MAAMsF,EAAUI,EAAQtD,KAAIvJ,GAAKuD,EAASvD,EAAEwD,KAAMxD,EAAEM,QACpDyE,YAAYC,OAAO,CACfC,OAAQ,sBAAsB7C,EAAS,yBAA0B,CAAEkK,GAAIG,EAAQF,gBAC/E3H,QAAS6H,EAAQlD,KAAIvJ,GAAK,QAAQA,YAAWJ,KAAK,IAClDsF,QAASH,YAAYI,WAAW,CAAEC,MAAOA,KAEjD,CAEO,SAAS0H,EAAgB1H,GAC5B,MAAM+B,EAAU/F,EAAoBgE,EAAO,eAC3C,IAAK+B,IAAYA,EAAQoF,OAErB,YADAlK,EAAK,aAIT,MAAM0K,EAAO5F,EAAQoF,OAASnH,EAAMwE,WAAWpI,MAC3CuL,EAAO,EACP1K,EAAK,YAAa,CAAEiK,GAAIS,EAAKC,aAIjC,IAAIhH,MAAMZ,GAAO2B,QAAO,EAC5B,CCzNO,MAEDkG,EAAiBtK,EAAY,gCAC7BuK,EAAyBvK,EAAY,yCACrCwK,EAAiBxK,EAAY,2BAE5Bc,eAAe2J,IAClB,MAAM/J,EAAWvD,EAAa,8BAExBuN,EAAwC,CAC1CC,IAAK,CACDC,MAAOJ,EAAe,UACtBK,KAAM,+BACNC,SAAUlG,GACNA,EACKC,KAAuB,+BACvBkG,UACAnE,KAAIvJ,GAAKR,KAAKuE,OAAOrE,IAAIM,EAAEwB,SAC3BzB,QAAOC,GAAKA,KAEzB2N,GAAI,CACAJ,MAAOJ,EAAe,UACtBK,KAAM,+BACNC,SAAU,IAAM,KAIlB1L,EAAmB,CACrB6C,cAAegJ,eAAevK,EAAU,CACpCU,OAAQvE,KAAKuE,OAAOhE,QAAOC,GAAgB,cAAXA,EAAE8B,OAClCW,KAAM0K,IAEV1G,MAAO0G,EAAe,SACtBE,UACAQ,QAAS,MACT9G,OAAQQ,IACJA,EAAKE,GAAG,SAAU,qBAAqB,IAkBnD,SAAgCF,GAC5B,MAAMuG,EAAQvG,EAAKC,KAAuB,qBAAqB,GAAIuG,QACnExG,EAAKC,KAAK,uBAAuBwG,KAAK,UAAWF,EACrD,CArByDG,CAAuB1G,KACpEA,EAAKE,GAAG,SAAU,uBAAuB,IAsBrD,SAAkCF,GAC9B,MAAMxD,EAASwD,EAAKC,KAAK,uBACnBuG,EAAUhK,EAAOhE,OAAO,YACxBmO,EAAM3G,EAAKC,KAAK,qBAElBzD,EAAOwI,SAAWwB,EAAQxB,QAC1B2B,EAAIF,KAAK,WAAW,GAAMA,KAAK,iBAAiB,GAChDjK,EAAOiK,KAAK,WAAW,IACfD,EAAQxB,OAIhB2B,EAAIF,KAAK,WAAW,GAAOA,KAAK,iBAAiB,IAHjDE,EAAIF,KAAK,WAAW,GAAOA,KAAK,iBAAiB,GACjDjK,EAAOiK,KAAK,WAAW,GAI/B,CApC2DG,CAAyB5G,IAAM,EAElFI,MAAO,IAAM,IAGX5D,QAAeqK,OAAOC,KAAKtM,OAAMC,EAAW,CAAEzC,GAAI,qCACxD,IAAKwE,EAAOwI,OACR,OAAOlK,EAAK,uCAGhB,IAAK,MAAM+C,KAASrB,QACVxC,EAAQ6D,EAAO,cAAe,IAGxC7C,EAAK,kCACT,CAuBOkB,eAAe6K,IAClB,MAAMjL,EAAWvD,EAAa,4BAExBuN,EAAwC,CAC1CC,IAAK,CACDC,MAAON,EAAe,UACtBO,KAAM,oCACNC,SAAUlG,IAGC,CAAEzF,KAFIyF,EAAKC,KAAK,8CAA8CO,MAEtD2C,OADkE,WAAlEnD,EAAKC,KAAK,8CAA8CO,SAI/E4F,GAAI,CACAJ,MAAON,EAAe,UACtBO,KAAM,+BACNC,SAAU,IAAM,OAIlB1L,EAAmB,CACrB6C,cAAegJ,eAAevK,EAAU,CAAEZ,KAAMwK,IAChDxG,MAAOwG,EAAe,SACtBI,UACAQ,QAAS,MACTlG,MAAO,IAAM,MAGXmE,QAAesC,OAAOC,KAAKtM,OAAMC,EAAW,CAAEzC,GAAI,mCACnDuM,IAEe,YAAhBA,EAAOhK,KAIf2B,eAAkCiH,GAC9B,IAAIzB,QAAcE,IAElB,GAAIF,SACuBmF,OAAOG,QAAQ,CAClC9H,MAAOyG,EAAuB,SAC9BtI,QAASsI,EAAuB,aAGtB,CACV,MAAMnD,EAASU,EAAeC,GAE9B,aADMzB,EAAMc,OAAOA,GACZyE,EAASvF,GAAO,E,CAI/BA,QD3BGxF,eAAwCiH,GAAS,GACpD,MACMC,EAASF,EAAeC,QADV/B,SAAoBG,IAExC,OAAOI,UAAUlE,OAAO2F,EAAQ,CAAE8D,WAAW,GACjD,CCuBkBC,CAAyBhE,SACjC8D,EAASvF,EACnB,CAtBmC0F,CAAmB7C,EAAOpB,QAwB7DjH,eAAiCiH,GAC7B,MAAMzB,QD1BH,SAAkCyB,GAAS,GAC9C,MAAMC,EAASF,EAAeC,GAC9B,OAAOxB,UAAUlE,OAAO2F,EAAQ,CAAE8D,WAAW,GACjD,CCuBwBG,CAAyBlE,SACvC8D,EAASvF,GACfA,EAAML,OAAO7B,QAAO,EACxB,CA3BS8H,CAAkB/C,EAAOpB,QAClC,CA4BAjH,eAAe+K,EAASvF,EAAkBqC,GAAY,GXxI/C,IAAiC9J,EWyIhC8J,SAAiBrC,EAAMqC,kBACV,YX1ImB9J,EW0INyH,EAAMzF,KXzI7BhE,KAAKW,SAAS2O,IAAI,EWyIR,YXzIwBtN,GW0I7C,CC3FAiC,eAAesL,EAAwBzG,GACnCA,EAAM0G,iBAEN,MAAMC,EAAU1G,EAAED,EAAME,eAAe0G,QAAQ,WACzCC,EAAWF,EAAQzH,KAAK,iBAE9B,IAAK2H,EAASC,SAAS,UAAW,CAC9B,MAAM5L,EAAOyL,EAAQI,KAAK,aACpBxF,QAAgBC,EAAqBtG,GAC3C,IAAKqG,EAAS,OAEd,MAAMS,QAAagF,WAAWC,WAAW1F,EAAQG,YAAa,CAAEvG,OAAO,IAEvE0L,EAAS3H,KAAK,qBAAqBD,KAAK+C,GACxC6E,EAASK,SAAS,S,CAGtBP,EAAQQ,YAAY,WACxB,CAQA,SAASC,EAAyBpH,GAC9BA,EAAM0G,iBAEN,MAAMnH,EAASU,EAAED,EAAME,eAAe0G,QAAQ,WACxCS,EAAO9H,EAAOqH,QAAQ,qBAE5BrH,EAAO4H,YAAY,aAEnB,MAAMG,EAAYC,OAAOF,EAAKN,KAAK,iBAAmB,KAChDS,EAAaH,EAAKnI,KAAK,qBAE7BmI,EAAKF,YAAY,cAAeK,EAAWvD,SAAWqD,EAC1D,CAmBO,SAASG,IACZjN,OAAOkN,OAAO9N,GAAG+N,SAASC,SAAQlQ,IAC1BA,aAAamQ,YAA+B,cAAjBnQ,EAAEoF,MAAMtD,MACnC9B,EAAE+G,QAAO,E,GAGrB,CCzDA,SAASqJ,EAAiBnP,GACtB,OAAQA,EAAOa,MACX,IAAK,eACD,GAAIb,EAAO2C,OAAOrE,KAAOC,KAAKiG,KAAKlG,GAAI,OACvC8F,EAAgBpE,GAChB,MACJ,IAAK,eACD,IJpEL,WACH,IAAKzB,KAAKiG,KAAKC,KAAM,OAAO,EAC5B,MAAM2K,EAAU7Q,KAAKmG,MAAM6B,MAAK/B,GAAQA,EAAKwC,QAAUxC,EAAKC,OAC5D,OAAOlG,KAAKiG,OAAS4K,CACzB,CIgEiBC,GAAa,OAClB5M,EAAgBzC,GAChB,MACJ,IAAK,gBACD,GAAIA,EAAO4C,SAAStE,KAAOC,KAAKiG,KAAKlG,GAAI,QPlE9CkE,eAA8BE,GACjC,MAAM,OAAEC,EAAM,SAAEC,GAAaF,EACvBG,EAActE,KAAKuE,OAAOrE,IAAIkE,EAAOI,KACrCC,EAAgBzE,KAAKuE,OAAOrE,IAAImE,EAASG,KAE/C,IAAKF,IAAgBG,EAEjB,YADAC,EAAeP,GAInB,IAAIiB,EAAU,MAAMxC,EAAS,uBAAwB,CAAEwB,OAAQE,EAAYxD,KAAMuD,SAAUI,EAAc3D,aACzGsE,GAAW,MAAMxC,EAAS,qBAAsB,CAAEmO,KAAMhN,EAASK,EAAOJ,cACxEoB,GAAW,MAAMxC,EAAS,qBAAsB,CAAEoO,KAAMjN,EAASM,EAASL,cAC1EoB,GAAW,kCAAkCxC,EAAS,oCAEjCgM,OAAOG,QAAQ,CAChC9H,MAAOrE,EAAS,uBAChBwC,cAAe0K,WAAWC,WAAW3K,EAAS,CAAEnB,OAAO,MAG/C+B,EAAc7B,GAiE9B,SAAuBA,GACfA,EAAMC,OAAOrE,KAAOC,KAAKiG,KAAKlG,GAKlCyB,EAA8B,IACvB2C,EACH7B,KAAM,iBANNuD,EAAgB1B,EAQxB,CA1ES8M,CAAc9M,EACvB,CO6CY+M,CAAezP,GACf,MACJ,IAAK,cACD,IAAKA,EAAO0E,MAAMgL,SAASnR,KAAKiG,KAAKlG,IAAK,OAC1C+F,EAAarE,EAAOuB,OAGhC,EhB7EO,SAAqBjD,EAAYqR,GAAW,GAC1C,IAAW,EgBeK,qBhBdrB,EAAOA,EAAW,SAAW,QACjC,CgBcAC,GAEAC,MAAMrJ,GAAG,4BDTFhE,eAAwCmF,EAA2BmI,GACtE,MAAM3L,EAAQwD,EAAMxD,OAChBA,EAAMiE,MAASjE,EAAM7F,IAAOC,KAAKuE,OAAOb,IAAIkC,EAAM7F,YAK1DkE,eAA8B8D,EAAcnC,GACxC,MAAM+B,EAAUC,EAAehC,GACzB2H,EAAO3H,EAAMwE,WAAWpI,MAAQ2F,EAAQoF,OACxCyE,EAAU5L,EAAM4L,QAChB5O,EAAWO,EAAY,yBAEvBU,QAAiBuK,eAAe9N,EAAa,aAAc,CAC7DmR,MAAOD,EACPrB,KAAMxI,EACN+J,OAAQnE,GAAQ,GAAKiE,EACrBG,QAASpE,EAAO,GAAKiE,EACrBI,SAAUnR,EAAW,SACrBoR,YAAatE,EAAO,EACpBA,KAAMuE,KAAKC,IAAIxE,GACftK,KAAM,CAACvC,GAAeoD,UAA6ClB,EAASlC,EAAKoD,KAGrFiE,EAAKC,KACD,2IAECgK,QACAC,MAAMpO,EACf,CA1BUqO,CAAeX,EAAO3L,GA4BhC,SAAmBmC,EAAcnC,GAC7B,MAAMuM,EAAQpK,EAAKC,KAAK,kCACxBmK,EAAMnK,KAAK,sBAAsBC,GAAG,SAASa,GAuDjD7E,eAAsC2B,EAAsBkD,GACxDA,EAAM0G,iBACN3C,EAAgBjH,EACpB,CA1D0DwM,CAAuBxM,EAAOkD,KACpFqJ,EAAMnK,KAAK,wBAAwBC,GAAG,QAASsH,GAC/C4C,EAAMnK,KAAK,qBAAqBC,GAAG,SAASa,GA0DhD7E,eAAoC2B,EAAsBkD,GACtDA,EAAM0G,iBAENtF,EAActE,EADDmD,EAAED,EAAME,eAAe0G,QAAQ,WAAWG,KAAK,aAEhE,CA9DyDwC,CAAqBzM,EAAOkD,KACjFqJ,EAAMnK,KAAK,yBAAyBC,GAAG,SAASa,GA0BpD7E,eAAwC2B,EAAsBkD,GAC1DA,EAAM0G,iBAENtC,EAAiBtH,EADJmD,EAAED,EAAME,eAAe0G,QAAQ,WAAWG,KAAK,aAEhE,CA9B6DyC,CAAyB1M,EAAOkD,KACzFqJ,EAAMnK,KAAK,yBAAyBC,GAAG,QAASiI,GAChDiC,EAAMnK,KAAK,kCAAkCC,GAAG,SAAS,IA4C7DhE,eAAyC2B,EAAsBmC,GAG3DoF,EAAmBvH,EAFDmC,EAAKC,KAAK,oDACJkG,UAAUnE,KAAIvJ,GAAKA,EAAE+R,QAAQvO,OAEzD,CAhDmEwO,CAA0B5M,EAAOmC,KAChGA,EAAKC,KAAK,oCAAoCC,GAAG,SAAS,IAAMqF,EAAgB1H,IACpF,CApCI6M,CAAUlB,EAAO3L,GACrB,ICMA0L,MAAMoB,KAAK,QAAQ,KACf9R,EAAgB,CACZE,KAAM,YACNwB,KAAMqQ,OACNtE,QAAS,GACTrN,QAAQ,IAGZJ,EAAgB,CACZE,KAAM,QACNwB,KAAMsQ,QACNvE,SAAS,EACTrN,QAAQ,EACR6R,SAAUtC,GACZ,IAGNe,MAAMoB,KAAK,SAAS,KZvCb,IAAyDzE,IYwCnD2C,EZvCT5Q,KAAK0B,OAAOuG,GAAG,UAAU,IAAagG,GYyCtCnO,IAAmCgT,IAAM,CACrClL,eAAc,EACdsC,cAAa,EACbI,qBAAoB,EACpBkB,eAAc,EACdqB,gBAAe,EACfK,iBAAgB,EAChBC,mBAAkB,EAClBG,gBAAe,GAGftN,KAAKiG,KAAKC,OACVpG,IAAmCgT,IAAIhE,YAAcA,EACrDhP,IAAmCgT,IAAIlF,kBAAoBA,E","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///../../../../foundryVTT-projects/@utils/socket.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///./src/trade.ts","webpack:///./src/apps/trade.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/actor.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/user.ts","webpack:///./src/actions.ts","webpack:///./src/api.ts","webpack:///./src/sheet.ts","webpack:///./src/main.ts"],"sourcesContent":["export let MODULE_ID = ''\r\nexport let TYPE = 'module'\r\n\r\nexport function setModuleID(id: string, isSystem = false) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n    TYPE = isSystem ? 'system' : 'module'\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions' | 'pf2e-dailies'\r\n\r\ntype ReturnedModule<TApi extends ModuleApi = ModuleApi> = Module<TApi> | undefined\r\ntype ReturnedModuleApi<TApi extends Record<string, any>> = Module<TApi>['api'] | undefined\r\n\r\nexport function getModule<T extends ModuleApi = ModuleApi>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<TApi extends ModuleApi = ModuleApi>() {\r\n    return getModule(MODULE_ID) as Module<TApi>\r\n}\r\n\r\nexport function getModuleApi<TApi extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<TApi>(id)?.api as ReturnedModuleApi<TApi>\r\n}\r\n","import { MODULE_ID, TYPE } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `${TYPE}s/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `${TYPE}s/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<TChoices extends Record<string, unknown> | undefined>(\r\n    options: Omit<SettingRegistration<TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown>; name: string }\r\n) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TChoices>(MODULE_ID, name, options as SettingRegistration<TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function socketOn<T extends SocketPacket = SocketPacket>(callback: SocketCallback<T>) {\r\n    game.socket.on(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketEmit<T extends SocketPacket = SocketPacket>(packet: T) {\r\n    game.socket.emit(`module.${MODULE_ID}`, packet)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: FoundryDocument) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: FoundryDocument, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocumentMixin) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocumentMixin, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocumentMixin, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string | number | boolean>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string | number | boolean>,\r\n    arg2?: boolean | Record<string, string | number | boolean>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function localizeTemplate(key: string, { hash }: { hash: Record<string, string> }) {\r\n    return localize(`${key}`, hash)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        template: {\r\n            value: (key: string, { hash }: { hash: Record<string, string> }) => fn(key, hash),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n        path: (key: string) => string\r\n        template: (key: string, options: { hash: Record<string, string> }) => string\r\n    }\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n\r\nexport function documentUuidFromTableResult(result: TableResult) {\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.DOCUMENT) return `${result.documentCollection}.${result.documentId}`\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.COMPENDIUM) return `Compendium.${result.documentCollection}.${result.documentId}`\r\n    return undefined\r\n}\r\n","import { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { socketEmit } from '@utils/socket'\r\n\r\nexport async function onTradeRequest(trade: BaseTrade) {\r\n    const { sender, receiver } = trade\r\n    const senderActor = game.actors.get(sender.cid)\r\n    const receiverActor = game.actors.get(receiver.cid)\r\n\r\n    if (!senderActor || !receiverActor) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    let content = `<p>${localize('trade-request.header', { sender: senderActor.name, receiver: receiverActor.name })}</p>`\r\n    content += `<p>${localize('trade-request.give', { give: chatUUID(sender.uuid) })}</p>`\r\n    content += `<p>${localize('trade-request.want', { want: chatUUID(receiver.uuid) })}</p>`\r\n    content += `<p style=\"margin-bottom: 1em;\">${localize('trade-request.accept')}</p>`\r\n\r\n    const accept = await Dialog.confirm({\r\n        title: localize('trade-request.title'),\r\n        content: await TextEditor.enrichHTML(content, { async: true }),\r\n    })\r\n\r\n    if (accept) acceptRequest(trade)\r\n    else rejectRequest(trade)\r\n}\r\n\r\nexport async function onTradeAccepted(trade: BaseTrade) {\r\n    const { sender, receiver } = trade\r\n    const senderActor = game.actors.get(sender.cid)\r\n    const receiverActor = game.actors.get(receiver.cid)\r\n\r\n    if (!senderActor || !receiverActor) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    const senderActions = getFlag<HeroAction[]>(senderActor, 'heroActions') ?? []\r\n    const receiverActions = getFlag<HeroAction[]>(receiverActor, 'heroActions') ?? []\r\n\r\n    const senderActionIndex = senderActions.findIndex(x => x.uuid === sender.uuid)\r\n    const receiverActionIndex = receiverActions.findIndex(x => x.uuid === receiver.uuid)\r\n\r\n    if (senderActionIndex === -1 || receiverActionIndex === -1) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    const senderAction = senderActions.splice(senderActionIndex, 1)[0]!\r\n    const receiverAction = receiverActions.splice(receiverActionIndex, 1)[0]!\r\n\r\n    senderActions.push(receiverAction)\r\n    receiverActions.push(senderAction)\r\n\r\n    setFlag(senderActor, 'heroActions', senderActions)\r\n    setFlag(receiverActor, 'heroActions', receiverActions)\r\n\r\n    let content = `<div>${localize('trade-success.offer', { offer: chatUUID(senderAction.uuid) })}</div>`\r\n    content += `<div>${localize('trade-success.receive', { receive: chatUUID(receiverAction.uuid) })}</div>`\r\n\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('trade-success.header', { name: receiverActor.name })}</h4>`,\r\n        content,\r\n        speaker: ChatMessage.getSpeaker({ actor: senderActor }),\r\n    })\r\n}\r\n\r\nexport async function onTradeRejected({ receiver }: BaseTrade) {\r\n    const actor = game.actors.get(receiver.cid)!\r\n    warn('trade-rejected', { name: actor.name }, true)\r\n}\r\n\r\nexport function onTradeError(err: string) {\r\n    error('trade-error')\r\n}\r\n\r\nexport function sendTradeRequest(trade: BaseTrade) {\r\n    if (trade.receiver.id === game.user.id) {\r\n        acceptRequest(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit<TradeRequestPacket>({\r\n        ...trade,\r\n        type: 'trade-request',\r\n    })\r\n}\r\n\r\nfunction rejectRequest(trade: BaseTrade) {\r\n    if (trade.sender.id === game.user.id) {\r\n        onTradeRejected(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit<TradeRejectPacket>({\r\n        ...trade,\r\n        type: 'trade-reject',\r\n    })\r\n}\r\n\r\nfunction acceptRequest(trade: BaseTrade) {\r\n    if (game.user.isGM) {\r\n        onTradeAccepted(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit<TradeAcceptPacket>({\r\n        ...trade,\r\n        type: 'trade-accept',\r\n    })\r\n}\r\n\r\nfunction sendTradeError({ sender, receiver }: BaseTrade, error: TradeError = 'trade-error') {\r\n    const users = new Set([sender.id, receiver.id])\r\n\r\n    if (users.has(game.user.id)) {\r\n        users.delete(game.user.id)\r\n        onTradeError(error)\r\n    }\r\n\r\n    if (!users.size) return\r\n\r\n    socketEmit<TradeErrorPacket>({\r\n        type: 'trade-error',\r\n        users: Array.from(users),\r\n        error,\r\n    })\r\n}\r\n","import { getHeroActions } from '@src/actions'\r\nimport { sendTradeRequest } from '@src/trade'\r\nimport { getCharacterOwner } from '@utils/foundry/actor'\r\nimport { localize, subLocalize } from '@utils/foundry/localize'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getFirstGM, getOwner } from '@utils/foundry/user'\r\n\r\nexport class Trade extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _target?: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e) {\r\n        super({ id: `pf2e-hero-actions-trade-${actor.id}` })\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions(): ApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('templates.trade.title'),\r\n            template: templatePath('trade.hbs'),\r\n            width: 600,\r\n            height: 'auto',\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    get target() {\r\n        return this._target\r\n    }\r\n\r\n    set target(value) {\r\n        if (!value) {\r\n            error('templates.trade.no-target')\r\n            return\r\n        }\r\n        if (value === this._target) return\r\n        delete this.target?.apps?.[this.appId]\r\n        this._target = value\r\n        this.render()\r\n    }\r\n\r\n    getData(options?: Partial<ApplicationOptions> | undefined): object | Promise<object> {\r\n        return mergeObject(super.getData(), {\r\n            actor: this.actor,\r\n            target: this.target,\r\n            targets: game.actors.filter(x => x.type === 'character' && x.id !== this.actor.id && x.hasPlayerOwner),\r\n            actions: getHeroActions(this.actor),\r\n            targetActions: this.target ? getHeroActions(this.target) : [],\r\n            i18n: subLocalize('templates.trade'),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n        html.find('select[name=\"target\"]').on('change', this.#onChangeTarget.bind(this))\r\n        html.find('[data-action=\"description\"]').on('click', this.#onDescription.bind(this))\r\n        html.find('[data-action=\"trade\"]').on('click', this.#onSendTrade.bind(this))\r\n        html.find('[data-action=\"cancel\"]').on('click', () => this.close())\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined): this | Promise<this> {\r\n        this.actor.apps[this.appId] = this\r\n        if (this.target) this.target.apps[this.appId] = this\r\n        return super.render(force, options)\r\n    }\r\n\r\n    async close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        await super.close(options)\r\n        delete this.actor.apps?.[this.appId]\r\n        delete this.target?.apps?.[this.appId]\r\n    }\r\n\r\n    #onSendTrade() {\r\n        if (!this.target) {\r\n            warn('templates.trade.no-target')\r\n            return\r\n        }\r\n\r\n        const action = this.element.find('[name=\"action\"]:checked').val()\r\n        const target = this.element.find('[name=\"targetAction\"]:checked').val()\r\n\r\n        if (typeof action !== 'string' || typeof target !== 'string') {\r\n            warn('templates.trade.no-select')\r\n            return\r\n        }\r\n\r\n        let user = getCharacterOwner(this.target, true) ?? getOwner(this.target, true) ?? getFirstGM()\r\n        if (!user) {\r\n            warn('templates.trade.no-user')\r\n            return\r\n        }\r\n\r\n        sendTradeRequest({\r\n            sender: {\r\n                id: game.user.id,\r\n                cid: this.actor.id,\r\n                uuid: action,\r\n            },\r\n            receiver: {\r\n                id: user.id,\r\n                cid: this.target.id,\r\n                uuid: target,\r\n            },\r\n        })\r\n\r\n        this.close()\r\n    }\r\n\r\n    async #onDescription(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const uuid = $(event.currentTarget).siblings('input').val() as CompendiumUUID\r\n        const entry = await fromUuid<JournalEntry>(uuid)\r\n        entry?.sheet.render(true)\r\n    }\r\n\r\n    #onChangeTarget(event: JQuery.ChangeEvent<any, any, HTMLElement>) {\r\n        const id = (event.currentTarget as HTMLSelectElement).value\r\n        this.target = game.actors.get<CharacterPF2e>(id)\r\n    }\r\n}\r\n","export function getCharacterOwner(actor: Actor, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && x.character === actor)\r\n    return game.users.find(x => x.character === actor)\r\n}\r\n\r\nexport function getActorTokens(actor: Actor, linkedOnly = false) {\r\n    return game.scenes.map(scene => getActorSceneTokens(scene, actor, linkedOnly)).flat()\r\n}\r\n\r\nexport function getActorSceneTokens(scene: Scene, actor: Actor, linkedOnly = false) {\r\n    return scene.tokens.filter(token => token.actorId === actor.id && (!linkedOnly || token.actorLink))\r\n}\r\n","export function isFirstGM() {\r\n    if (!game.user.isGM) return false\r\n    const firstGM = game.users.find(user => user.active && user.isGM)\r\n    return game.user === firstGM\r\n}\r\n\r\nexport function getFirstGM() {\r\n    return game.users.find(user => user.active && user.isGM)\r\n}\r\n\r\nexport function isGM() {\r\n    const data = game.data as Game['data'] & { userId: string }\r\n    const user = data.users.find(x => x._id === data.userId)\r\n    return !!user && user.role >= CONST.USER_ROLES.GAMEMASTER\r\n}\r\n\r\nexport function getOwners(doc: FoundryDocument, connected = false) {\r\n    if (connected) return game.users.filter(x => x.active && doc.testUserPermission(x, 'OWNER'))\r\n    return game.users.filter(x => doc.testUserPermission(x, 'OWNER'))\r\n}\r\n\r\nexport function getOwner(doc: FoundryDocument, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && doc.testUserPermission(x, 'OWNER'))\r\n    return game.users.find(x => doc.testUserPermission(x, 'OWNER'))\r\n}\r\n","import { Trade } from '@apps/trade'\r\nimport { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { flagsUpdatePath } from '@utils/foundry/path'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { chatUUID, documentUuidFromTableResult } from '@utils/foundry/uuid'\r\n\r\nconst DECK_PACK = 'pf2e.hero-point-deck' as const\r\nconst TABLE_PACK = 'pf2e.rollable-tables' as const\r\nconst TABLE_ID = 'zgZoI7h0XjjJrrNK' as const\r\nconst TABLE_UUID = `Compendium.${TABLE_PACK}.${TABLE_ID}` as const\r\nconst ICON = 'systems/pf2e/icons/features/feats/heroic-recovery.webp' as const\r\n\r\nasync function getTableFromUuid(uuid: string | undefined) {\r\n    if (!uuid) return undefined\r\n    const table = await fromUuid(uuid)\r\n    return table && table instanceof RollTable ? table : undefined\r\n}\r\n\r\nexport async function getDefaultCompendiumTable() {\r\n    return getTableFromUuid(TABLE_UUID) as Promise<RollTable>\r\n}\r\n\r\nexport async function getDefaultWorldTable() {\r\n    return game.tables.find(x => x.getFlag('core', 'sourceId') === TABLE_UUID)\r\n}\r\n\r\nexport async function getCustomTable() {\r\n    return getTableFromUuid(getSetting('tableUUID'))\r\n}\r\n\r\nexport async function getDeckTable() {\r\n    return (await getCustomTable()) ?? (await getDefaultWorldTable()) ?? (await getDefaultCompendiumTable())\r\n}\r\n\r\nexport function getHeroActions(actor: CharacterPF2e): HeroAction[] {\r\n    const actions = getFlag<Array<HeroAction | string>>(actor, 'heroActions') ?? []\r\n    const pack = game.packs.get(DECK_PACK)\r\n\r\n    return actions\r\n        .map(action => {\r\n            if (typeof action !== 'string') return action\r\n            if (!pack) return undefined\r\n            const entry = pack.index.get(action)\r\n            if (!entry) return undefined\r\n            return { name: entry.name, uuid: `Compendium.${DECK_PACK}.${entry._id}` }\r\n        })\r\n        .filter(x => x) as HeroAction[]\r\n}\r\n\r\nexport async function useHeroAction(actor: CharacterPF2e, uuid: string) {\r\n    const points = actor.heroPoints.value\r\n    if (points < 1) return warn('use.noPoints')\r\n\r\n    const actions = getHeroActions(actor)\r\n\r\n    const index = actions.findIndex(x => x.uuid === uuid)\r\n    if (index === -1) return\r\n\r\n    const details = await getHeroActionDetails(uuid)\r\n    if (!details) error('use.noDetails')\r\n\r\n    actions.splice(index, 1)\r\n\r\n    if (details) {\r\n        actor.update({\r\n            ['system.resources.heroPoints.value']: points - 1,\r\n            [flagsUpdatePath('heroActions')]: actions,\r\n        })\r\n\r\n        ChatMessage.create({\r\n            flavor: `<h4 class=\"action\">${localize('actions-use.header')}</h4>`,\r\n            content: `<h2>${details.name}</h2>${details.description}`,\r\n            speaker: ChatMessage.getSpeaker({ actor }),\r\n        })\r\n    } else setFlag(actor, 'heroActions', actions)\r\n}\r\n\r\nexport async function getHeroActionDetails(uuid: string) {\r\n    const document = await fromUuid(uuid)\r\n    if (!(document instanceof JournalEntry)) return undefined\r\n\r\n    const page = document.pages.contents[0]\r\n\r\n    let text = page?.text.content\r\n    if (text && document.pack === DECK_PACK) text = text.replace(/^<p>/, '<p><strong>Trigger</strong> ')\r\n\r\n    return text ? { name: document.name, description: text } : undefined\r\n}\r\n\r\nexport function setHeroActions(actor: CharacterPF2e, actions: HeroAction[]) {\r\n    return setFlag(actor, 'heroActions', actions)\r\n}\r\n\r\nexport function getTableSource(unique = true, table?: RollTable) {\r\n    const source = {\r\n        name: localize('table.name'),\r\n        replacement: !unique,\r\n        img: ICON,\r\n        description: localize('table.description'),\r\n    }\r\n    if (!table) return source\r\n    return mergeObject(duplicate(table._source), source)\r\n}\r\n\r\nexport async function createDefautActionsTable(unique = true) {\r\n    const table = await fromUuid<RollTable>(TABLE_UUID)\r\n    const source = getTableSource(unique, table!)\r\n    return RollTable.create(source, { temporary: false }) as Promise<RollTable>\r\n}\r\n\r\nexport function createCustomActionsTable(unique = true) {\r\n    const source = getTableSource(unique)\r\n    return RollTable.create(source, { temporary: false }) as Promise<RollTable>\r\n}\r\n\r\nexport async function drawHeroAction() {\r\n    const table = await getDeckTable()\r\n\r\n    if (!table) {\r\n        error('table.drawError', true)\r\n        return null\r\n    }\r\n\r\n    if (!table.formula) {\r\n        if (game.user.isGM) {\r\n            if (table.compendium) {\r\n                error('table.noFormulaCompendium', true)\r\n                return null\r\n            }\r\n            await table.normalize()\r\n        } else {\r\n            error('table.noFormula', true)\r\n            return null\r\n        }\r\n    }\r\n\r\n    if (table.replacement === false) {\r\n        const notDrawn = table.results.some(r => !r.drawn)\r\n        if (!notDrawn) await table.resetResults()\r\n    }\r\n\r\n    const draw = (await table.draw({ displayChat: false })).results[0]\r\n    if (!draw) return\r\n\r\n    const uuid = documentUuidFromTableResult(draw)\r\n    if (uuid) return { uuid, name: draw.text }\r\n}\r\n\r\nexport async function drawHeroActions(actor: CharacterPF2e) {\r\n    const actions = getHeroActions(actor)\r\n    const nb = actor.heroPoints.value - actions.length\r\n\r\n    const drawn = /** @type {HeroAction[]} */ []\r\n    for (let i = 0; i < nb; i++) {\r\n        const action = await drawHeroAction()\r\n\r\n        if (action === undefined) continue\r\n        else if (action === null) return\r\n\r\n        actions.push(action)\r\n        drawn.push(action)\r\n    }\r\n\r\n    if (!drawn.length) return\r\n\r\n    setHeroActions(actor, actions)\r\n\r\n    const display = drawn.map(x => chatUUID(x.uuid, x.name))\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('actions-draw.header', { nb: display.length })}</h4>`,\r\n        content: display.map(x => `<div>${x}</div>`).join(''),\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n\r\nexport async function sendActionToChat(actor: CharacterPF2e, uuid: ItemUUID) {\r\n    const details = await getHeroActionDetails(uuid)\r\n    if (!details) return error('details.missing')\r\n\r\n    ChatMessage.create({\r\n        content: `<h2>${details.name}</h2>${details.description}`,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n\r\nexport async function discardHeroActions(actor: CharacterPF2e, uuids: ItemUUID | ItemUUID[]) {\r\n    uuids = typeof uuids === 'string' ? [uuids] : uuids\r\n\r\n    const actions = getHeroActions(actor)\r\n    const removed: HeroAction[] = []\r\n\r\n    for (const uuid of uuids) {\r\n        const index = actions.findIndex(x => x.uuid === uuid)\r\n        if (index === -1) continue\r\n        removed.push(actions[index]!)\r\n        actions.splice(index, 1)\r\n    }\r\n\r\n    setHeroActions(actor, actions)\r\n\r\n    const display = removed.map(x => chatUUID(x.uuid, x.name))\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('actions-discard.header', { nb: display.length })}</h4>`,\r\n        content: display.map(x => `<div>${x}</div>`).join(''),\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n\r\nexport function tradeHeroAction(actor: CharacterPF2e) {\r\n    const actions = getFlag<Array<any>>(actor, 'heroActions')\r\n    if (!actions || !actions.length) {\r\n        warn('no-action')\r\n        return\r\n    }\r\n\r\n    const diff = actions.length - actor.heroPoints.value\r\n    if (diff > 0) {\r\n        warn('no-points', { nb: diff.toString() })\r\n        return\r\n    }\r\n\r\n    new Trade(actor).render(true)\r\n}\r\n","import { setFlag } from '@utils/foundry/flags'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { info, warn } from '@utils/foundry/notification'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { setSetting } from '@utils/foundry/settings'\r\nimport { createCustomActionsTable, createDefautActionsTable, getDefaultWorldTable, getTableSource } from './actions'\r\n\r\nexport const CREATE_TABLE_UUID = 'Compendium.pf2e-hero-actions.macros.SUXi4nhdJb8vZk58'\r\n\r\nconst localizeChoice = subLocalize('templates.createTable.choice')\r\nconst localizeDefaultConfirm = subLocalize('templates.createTable.default.confirm')\r\nconst localizeRemove = subLocalize('templates.removeActions')\r\n\r\nexport async function removeHeroActions() {\r\n    const template = templatePath('dialogs/remove-actions.hbs')\r\n\r\n    const buttons: Record<string, DialogButton> = {\r\n        yes: {\r\n            label: localizeRemove('remove'),\r\n            icon: '<i class=\"fas fa-trash\"></i>',\r\n            callback: html =>\r\n                html\r\n                    .find<HTMLInputElement>('input[name=\"actor\"]:checked')\r\n                    .toArray()\r\n                    .map(x => game.actors.get(x.value))\r\n                    .filter(x => x),\r\n        },\r\n        no: {\r\n            label: localizeRemove('cancel'),\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            callback: () => [],\r\n        },\r\n    }\r\n\r\n    const data: DialogData = {\r\n        content: await renderTemplate(template, {\r\n            actors: game.actors.filter(x => x.type === 'character'),\r\n            i18n: localizeRemove,\r\n        }),\r\n        title: localizeRemove('title'),\r\n        buttons,\r\n        default: 'yes',\r\n        render: html => {\r\n            html.on('change', 'input[name=\"all\"]', () => removeActionsToggleAll(html))\r\n            html.on('change', 'input[name=\"actor\"]', () => removeActionsToggleActor(html))\r\n        },\r\n        close: () => [],\r\n    }\r\n\r\n    const actors = await Dialog.wait(data, undefined, { id: 'pf2e-hero-actions-remove-actions' })\r\n    if (!actors.length) {\r\n        return warn('templates.removeActions.noSelection')\r\n    }\r\n\r\n    for (const actor of actors) {\r\n        await setFlag(actor, 'heroActions', [])\r\n    }\r\n\r\n    info('templates.removeActions.removed')\r\n}\r\n\r\nfunction removeActionsToggleAll(html: JQuery) {\r\n    const state = html.find<HTMLInputElement>('input[name=\"all\"]')[0]!.checked\r\n    html.find('input[name=\"actor\"]').prop('checked', state)\r\n}\r\n\r\nfunction removeActionsToggleActor(html: JQuery) {\r\n    const actors = html.find('input[name=\"actor\"]')\r\n    const checked = actors.filter(':checked')\r\n    const all = html.find('input[name=\"all\"]')\r\n\r\n    if (actors.length === checked.length) {\r\n        all.prop('checked', true).prop('indeterminate', false)\r\n        actors.prop('checked', true)\r\n    } else if (!checked.length) {\r\n        all.prop('checked', false).prop('indeterminate', false)\r\n        actors.prop('checked', false)\r\n    } else {\r\n        all.prop('checked', false).prop('indeterminate', true)\r\n    }\r\n}\r\n\r\nexport async function createTable() {\r\n    const template = templatePath('dialogs/create-table.hbs')\r\n\r\n    const buttons: Record<string, DialogButton> = {\r\n        yes: {\r\n            label: localizeChoice('create'),\r\n            icon: '<i class=\"fas fa-border-all\"></i>',\r\n            callback: html => {\r\n                const type = html.find('.window-content input[name=\"type\"]:checked').val()\r\n                const unique = html.find('.window-content input[name=\"draw\"]:checked').val() === 'unique'\r\n                return { type, unique }\r\n            },\r\n        },\r\n        no: {\r\n            label: localizeChoice('cancel'),\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            callback: () => null,\r\n        },\r\n    }\r\n\r\n    const data: DialogData = {\r\n        content: await renderTemplate(template, { i18n: localizeChoice }),\r\n        title: localizeChoice('title'),\r\n        buttons,\r\n        default: 'yes',\r\n        close: () => null,\r\n    }\r\n\r\n    const result = await Dialog.wait(data, undefined, { id: 'pf2e-hero-actions-create-table' })\r\n    if (!result) return\r\n\r\n    if (result.type === 'default') createDefaultTable(result.unique)\r\n    else createCustomTable(result.unique)\r\n}\r\n\r\nasync function createDefaultTable(unique: boolean) {\r\n    let table = await getDefaultWorldTable()\r\n\r\n    if (table) {\r\n        const override = await Dialog.confirm({\r\n            title: localizeDefaultConfirm('title'),\r\n            content: localizeDefaultConfirm('content'),\r\n        })\r\n\r\n        if (override) {\r\n            const update = getTableSource(unique)\r\n            await table.update(update)\r\n            return setTable(table, true)\r\n        }\r\n    }\r\n\r\n    table = await createDefautActionsTable(unique)\r\n    await setTable(table)\r\n}\r\n\r\nasync function createCustomTable(unique: boolean) {\r\n    const table = await createCustomActionsTable(unique)\r\n    await setTable(table)\r\n    table.sheet?.render(true)\r\n}\r\n\r\nasync function setTable(table: RollTable, normalize = false) {\r\n    if (normalize) await table.normalize()\r\n    await setSetting('tableUUID', table.uuid)\r\n}\r\n","import { subLocalize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport {\r\n    discardHeroActions,\r\n    drawHeroActions,\r\n    getHeroActionDetails,\r\n    getHeroActions,\r\n    sendActionToChat,\r\n    tradeHeroAction,\r\n    useHeroAction,\r\n} from './actions'\r\n\r\nexport async function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, $html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (actor.pack || !actor.id || !game.actors.has(actor.id)) return\r\n    await addHeroActions($html, actor)\r\n    addEvents($html, actor)\r\n}\r\n\r\nasync function addHeroActions(html: JQuery, actor: CharacterPF2e) {\r\n    const actions = getHeroActions(actor)\r\n    const diff = actor.heroPoints.value - actions.length\r\n    const isOwner = actor.isOwner\r\n    const localize = subLocalize('templates.heroActions')\r\n\r\n    const template = await renderTemplate(templatePath('sheet.hbs'), {\r\n        owner: isOwner,\r\n        list: actions,\r\n        canUse: diff >= 0 && isOwner,\r\n        canDraw: diff > 0 && isOwner,\r\n        canTrade: getSetting('trade'),\r\n        mustDiscard: diff < 0,\r\n        diff: Math.abs(diff),\r\n        i18n: (key: string, { hash }: { hash: Record<string, string> }) => localize(key, hash),\r\n    })\r\n\r\n    html.find(\r\n        '.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter] > .strikes-list:not(.skill-action-list)'\r\n    )\r\n        .first()\r\n        .after(template)\r\n}\r\n\r\nfunction addEvents(html: JQuery, actor: CharacterPF2e) {\r\n    const $list = html.find('.tab.actions .heroActions-list')\r\n    $list.find('[data-action=draw]').on('click', event => onClickHeroActionsDraw(actor, event))\r\n    $list.find('[data-action=expand]').on('click', onClickHeroActionExpand)\r\n    $list.find('[data-action=use]').on('click', event => onClickHeroActionUse(actor, event))\r\n    $list.find('[data-action=display]').on('click', event => onClickHeroActionDisplay(actor, event))\r\n    $list.find('[data-action=discard]').on('click', onClickHeroActionDiscard)\r\n    $list.find('[data-action=discard-selected]').on('click', () => onClickHeroActionsDiscard(actor, html))\r\n    html.find('[data-action=hero-actions-trade]').on('click', () => tradeHeroAction(actor))\r\n}\r\n\r\nasync function onClickHeroActionExpand(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n\r\n    const $action = $(event.currentTarget).closest('.action')\r\n    const $summary = $action.find('.item-summary')\r\n\r\n    if (!$summary.hasClass('loaded')) {\r\n        const uuid = $action.attr('data-uuid')!\r\n        const details = await getHeroActionDetails(uuid)\r\n        if (!details) return\r\n\r\n        const text = await TextEditor.enrichHTML(details.description, { async: true })\r\n\r\n        $summary.find('.item-description').html(text)\r\n        $summary.addClass('loaded')\r\n    }\r\n\r\n    $action.toggleClass('expanded')\r\n}\r\n\r\nasync function onClickHeroActionDisplay(actor: CharacterPF2e, event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n    const uuid = $(event.currentTarget).closest('.action').attr('data-uuid') as ItemUUID\r\n    sendActionToChat(actor, uuid)\r\n}\r\n\r\nfunction onClickHeroActionDiscard(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n\r\n    const action = $(event.currentTarget).closest('.action')\r\n    const list = action.closest('.heroActions-list')\r\n\r\n    action.toggleClass('discarded')\r\n\r\n    const toDiscard = Number(list.attr('data-discard') ?? '0')\r\n    const $discarded = list.find('.action.discarded')\r\n\r\n    list.toggleClass('discardable', $discarded.length === toDiscard)\r\n}\r\n\r\nasync function onClickHeroActionsDiscard(actor: CharacterPF2e, html: JQuery) {\r\n    const discarded = html.find('.tab.actions .heroActions-list .action.discarded')\r\n    const uuids = discarded.toArray().map(x => x.dataset.uuid) as ItemUUID[]\r\n    discardHeroActions(actor, uuids)\r\n}\r\n\r\nasync function onClickHeroActionsDraw(actor: CharacterPF2e, event: JQuery.ClickEvent) {\r\n    event.preventDefault()\r\n    drawHeroActions(actor)\r\n}\r\n\r\nasync function onClickHeroActionUse(actor: CharacterPF2e, event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n    const uuid = $(event.currentTarget).closest('.action').attr('data-uuid')!\r\n    useHeroAction(actor, uuid)\r\n}\r\n\r\nexport function refreshSheets() {\r\n    Object.values(ui.windows).forEach(x => {\r\n        if (x instanceof ActorSheet && x.actor.type === 'character') {\r\n            x.render(true)\r\n        }\r\n    })\r\n}\r\n","import { getCurrentModule } from '@utils/foundry/module'\r\nimport { registerSetting } from '@utils/foundry/settings'\r\nimport { isFirstGM } from '@utils/foundry/user'\r\nimport { setModuleID } from '@utils/module'\r\nimport { socketOn } from '@utils/socket'\r\nimport {\r\n    discardHeroActions,\r\n    drawHeroAction,\r\n    drawHeroActions,\r\n    getHeroActionDetails,\r\n    getHeroActions,\r\n    sendActionToChat,\r\n    tradeHeroAction,\r\n    useHeroAction,\r\n} from './actions'\r\nimport { createTable, removeHeroActions } from './api'\r\nimport { refreshSheets, renderCharacterSheetPF2e } from './sheet'\r\nimport { onTradeAccepted, onTradeError, onTradeRejected, onTradeRequest } from './trade'\r\n\r\nexport const MODULE_ID = 'pf2e-hero-actions'\r\nsetModuleID(MODULE_ID)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nHooks.once('init', () => {\r\n    registerSetting({\r\n        name: 'tableUUID',\r\n        type: String,\r\n        default: '',\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'trade',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n        onChange: refreshSheets,\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    socketOn(onPacketReceived)\r\n\r\n    getCurrentModule<HeroActionsApi>().api = {\r\n        getHeroActions,\r\n        useHeroAction,\r\n        getHeroActionDetails,\r\n        drawHeroAction,\r\n        drawHeroActions,\r\n        sendActionToChat,\r\n        discardHeroActions,\r\n        tradeHeroAction,\r\n    }\r\n\r\n    if (game.user.isGM) {\r\n        getCurrentModule<HeroActionsApi>().api.createTable = createTable\r\n        getCurrentModule<HeroActionsApi>().api.removeHeroActions = removeHeroActions\r\n    }\r\n})\r\n\r\nfunction onPacketReceived(packet: Packet) {\r\n    switch (packet.type) {\r\n        case 'trade-reject':\r\n            if (packet.sender.id !== game.user.id) return\r\n            onTradeRejected(packet)\r\n            break\r\n        case 'trade-accept':\r\n            if (!isFirstGM()) return\r\n            onTradeAccepted(packet)\r\n            break\r\n        case 'trade-request':\r\n            if (packet.receiver.id !== game.user.id) return\r\n            onTradeRequest(packet)\r\n            break\r\n        case 'trade-error':\r\n            if (!packet.users.includes(game.user.id)) return\r\n            onTradeError(packet.error)\r\n            break\r\n    }\r\n}\r\n"],"names":["getCurrentModule","id","game","modules","get","path","join","flagsUpdatePath","templatePath","filter","x","getSetting","key","settings","registerSetting","options","name","scope","config","hint","Array","isArray","choices","reduce","choice","register","socketEmit","packet","socket","emit","getFlag","doc","fallback","setFlag","value","notify","str","arg1","arg2","arg3","type","data","undefined","permanent","ui","notifications","localize","warn","args","info","error","i18n","format","subLocalize","subKey","fn","Object","defineProperties","enumerable","configurable","has","hasLocalization","localizePath","template","hash","chatUUID","uuid","async","onTradeAccepted","trade","sender","receiver","senderActor","actors","cid","receiverActor","sendTradeError","senderActions","receiverActions","senderActionIndex","findIndex","receiverActionIndex","senderAction","splice","receiverAction","push","content","offer","receive","ChatMessage","create","flavor","speaker","getSpeaker","actor","onTradeRejected","onTradeError","err","acceptRequest","user","isGM","users","Set","delete","size","from","Trade","Application","_actor","_target","constructor","super","this","defaultOptions","mergeObject","title","width","height","target","apps","appId","render","getData","targets","hasPlayerOwner","actions","getHeroActions","targetActions","activateListeners","html","find","on","bind","close","force","action","element","val","connected","active","character","getCharacterOwner","testUserPermission","getOwner","event","$","currentTarget","siblings","entry","fromUuid","sheet","DECK_PACK","TABLE_UUID","ICON","getTableFromUuid","table","RollTable","getDefaultWorldTable","tables","pack","packs","map","index","_id","useHeroAction","points","heroPoints","details","getHeroActionDetails","update","description","document","JournalEntry","page","pages","contents","text","replace","setHeroActions","getTableSource","unique","source","replacement","img","duplicate","_source","drawHeroAction","getCustomTable","getDefaultCompendiumTable","getDeckTable","formula","compendium","normalize","results","some","r","drawn","resetResults","draw","displayChat","result","CONST","TABLE_RESULT_TYPES","DOCUMENT","documentCollection","documentId","COMPENDIUM","drawHeroActions","nb","length","i","display","sendActionToChat","discardHeroActions","uuids","removed","tradeHeroAction","diff","toString","localizeChoice","localizeDefaultConfirm","localizeRemove","removeHeroActions","buttons","yes","label","icon","callback","toArray","no","renderTemplate","default","state","checked","prop","removeActionsToggleAll","all","removeActionsToggleActor","Dialog","wait","createTable","confirm","setTable","temporary","createDefautActionsTable","createDefaultTable","createCustomActionsTable","createCustomTable","set","onClickHeroActionExpand","preventDefault","$action","closest","$summary","hasClass","attr","TextEditor","enrichHTML","addClass","toggleClass","onClickHeroActionDiscard","list","toDiscard","Number","$discarded","refreshSheets","values","windows","forEach","ActorSheet","onPacketReceived","firstGM","isFirstGM","give","want","rejectRequest","onTradeRequest","includes","isSystem","setModuleID","Hooks","$html","isOwner","owner","canUse","canDraw","canTrade","mustDiscard","Math","abs","first","after","addHeroActions","$list","onClickHeroActionsDraw","onClickHeroActionUse","onClickHeroActionDisplay","dataset","onClickHeroActionsDiscard","addEvents","once","String","Boolean","onChange","api"],"sourceRoot":""}