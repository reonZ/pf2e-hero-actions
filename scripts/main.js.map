{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/socket.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/uuid.ts","webpack:///./src/actions.ts","webpack:///./src/api.ts","webpack:///./src/trade.ts","webpack:///./src/apps/trade.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/actor.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/user.ts","webpack:///./src/sheet.ts","webpack:///./src/main.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts"],"sourcesContent":["export let MODULE_ID = ''\r\nexport let TYPE = 'module'\r\n\r\nexport function setModuleID(id: string, isSystem = false) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n    TYPE = isSystem ? 'system' : 'module'\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function socketOn<T extends SocketPacket = SocketPacket>(callback: SocketCallback<T>) {\r\n    game.socket.on(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketEmit<T extends SocketPacket = SocketPacket>(packet: T) {\r\n    game.socket.emit(`module.${MODULE_ID}`, packet)\r\n}\r\n","import { MODULE_ID, TYPE } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `${TYPE}s/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `${TYPE}s/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<TChoices extends Record<string, unknown> | undefined>(\r\n    options: Omit<SettingRegistration<TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown>; name: string }\r\n) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TChoices>(MODULE_ID, name, options as SettingRegistration<TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: FoundryDocument) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: FoundryDocument, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocumentMixin) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocumentMixin, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocumentMixin, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string | number | boolean>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string | number | boolean>,\r\n    arg2?: boolean | Record<string, string | number | boolean>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function localizeTemplate(key: string, { hash }: { hash: Record<string, string> }) {\r\n    return localize(`${key}`, hash)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        template: {\r\n            value: (key: string, { hash }: { hash: Record<string, string> }) => fn(key, hash),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n        path: (key: string) => string\r\n        template: (key: string, options: { hash: Record<string, string> }) => string\r\n    }\r\n}\r\n","export function chatUUID(uuid: string, name?: string) {\r\n    if (name) return `@UUID[${uuid}]{${name}}`\r\n    return `@UUID[${uuid}]`\r\n}\r\n\r\nexport function fakeChatUUID(name: string) {\r\n    return `<span style=\"background: #DDD;\r\n    padding: 1px 4px;\r\n    border: 1px solid var(--color-border-dark-tertiary);\r\n    border-radius: 2px;\r\n    white-space: nowrap;\r\n    word-break: break-all;\">${name}</span>`\r\n}\r\n\r\nexport function documentUuidFromTableResult(result: TableResult) {\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.DOCUMENT) return `${result.documentCollection}.${result.documentId}`\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.COMPENDIUM) return `Compendium.${result.documentCollection}.${result.documentId}`\r\n    return undefined\r\n}\r\n","import { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { flagsUpdatePath } from '@utils/foundry/path'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { documentUuidFromTableResult } from '@utils/foundry/uuid'\r\n\r\nconst DECK_PACK = 'pf2e.hero-point-deck' as const\r\nconst TABLE_PACK = 'pf2e.rollable-tables' as const\r\nconst TABLE_ID = 'zgZoI7h0XjjJrrNK' as const\r\nconst TABLE_UUID = `Compendium.${TABLE_PACK}.${TABLE_ID}` as const\r\nconst ICON = 'systems/pf2e/icons/features/feats/heroic-recovery.webp' as const\r\n\r\nasync function getTableFromUuid(uuid: string | undefined) {\r\n    if (!uuid) return undefined\r\n    const table = await fromUuid(uuid)\r\n    return table && table instanceof RollTable ? table : undefined\r\n}\r\n\r\nexport async function getDefaultCompendiumTable() {\r\n    return getTableFromUuid(TABLE_UUID) as Promise<RollTable>\r\n}\r\n\r\nexport async function getDefaultWorldTable() {\r\n    return game.tables.find(x => x.getFlag('core', 'sourceId') === TABLE_UUID)\r\n}\r\n\r\nexport async function getCustomTable() {\r\n    return getTableFromUuid(getSetting('tableUUID'))\r\n}\r\n\r\nexport async function getDeckTable() {\r\n    return (await getCustomTable()) ?? (await getDefaultWorldTable()) ?? (await getDefaultCompendiumTable())\r\n}\r\n\r\nexport function getHeroActions(actor: CharacterPF2e): HeroAction[] {\r\n    const actions = getFlag<Array<HeroAction | string>>(actor, 'heroActions') ?? []\r\n    const pack = game.packs.get(DECK_PACK)\r\n\r\n    return actions\r\n        .map(action => {\r\n            if (typeof action !== 'string') return action\r\n            if (!pack) return undefined\r\n            const entry = pack.index.get(action)\r\n            if (!entry) return undefined\r\n            return { name: entry.name, uuid: `Compendium.${DECK_PACK}.${entry._id}` }\r\n        })\r\n        .filter(x => x) as HeroAction[]\r\n}\r\n\r\nexport async function useHeroAction(actor: CharacterPF2e, uuid: string) {\r\n    const points = actor.heroPoints.value\r\n    if (points < 1) return warn('use.noPoints')\r\n\r\n    const actions = getHeroActions(actor)\r\n\r\n    const index = actions.findIndex(x => x.uuid === uuid)\r\n    if (index === -1) return\r\n\r\n    const details = await getHeroActionDetails(uuid)\r\n    if (!details) error('use.noDetails')\r\n\r\n    actions.splice(index, 1)\r\n\r\n    if (details) {\r\n        actor.update({\r\n            ['system.resources.heroPoints.value']: points - 1,\r\n            [flagsUpdatePath('heroActions')]: actions,\r\n        })\r\n\r\n        ChatMessage.create({\r\n            flavor: `<h4 class=\"action\">${localize('actions-use.header')}</h4>`,\r\n            content: `<h2>${details.name}</h2>${details.description}`,\r\n            speaker: ChatMessage.getSpeaker({ actor }),\r\n        })\r\n    } else setFlag(actor, 'heroActions', actions)\r\n}\r\n\r\nexport async function getHeroActionDetails(uuid: string) {\r\n    const document = await fromUuid(uuid)\r\n    if (!(document instanceof JournalEntry)) return undefined\r\n\r\n    const page = document.pages.contents[0]\r\n\r\n    let text = page?.text.content\r\n    if (text && document.pack === DECK_PACK) text = text.replace(/^<p>/, '<p><strong>Trigger</strong> ')\r\n\r\n    return text ? { name: document.name, description: text } : undefined\r\n}\r\n\r\nexport function setHeroActions(actor: CharacterPF2e, actions: HeroAction[]) {\r\n    return setFlag(actor, 'heroActions', actions)\r\n}\r\n\r\nexport function getTableSource(unique = true, table?: RollTable) {\r\n    const source = {\r\n        name: localize('table.name'),\r\n        replacement: !unique,\r\n        img: ICON,\r\n        description: localize('table.description'),\r\n    }\r\n    if (!table) return source\r\n    return mergeObject(duplicate(table._source), source)\r\n}\r\n\r\nexport async function createDefautActionsTable(unique = true) {\r\n    const table = await fromUuid<RollTable>(TABLE_UUID)\r\n    const source = getTableSource(unique, table!)\r\n    return RollTable.create(source, { temporary: false }) as Promise<RollTable>\r\n}\r\n\r\nexport function createCustomActionsTable(unique = true) {\r\n    const source = getTableSource(unique)\r\n    return RollTable.create(source, { temporary: false }) as Promise<RollTable>\r\n}\r\n\r\nexport async function drawHeroAction() {\r\n    const table = await getDeckTable()\r\n\r\n    if (!table) {\r\n        error('table.drawError', true)\r\n        return null\r\n    }\r\n\r\n    if (!table.formula) {\r\n        if (game.user.isGM) {\r\n            if (table.compendium) {\r\n                error('table.noFormulaCompendium', true)\r\n                return null\r\n            }\r\n            await table.normalize()\r\n        } else {\r\n            error('table.noFormula', true)\r\n            return null\r\n        }\r\n    }\r\n\r\n    if (table.replacement === false) {\r\n        const notDrawn = table.results.some(r => !r.drawn)\r\n        if (!notDrawn) await table.resetResults()\r\n    }\r\n\r\n    const draw = (await table.draw({ displayChat: false })).results[0]\r\n    if (!draw) return\r\n\r\n    const uuid = documentUuidFromTableResult(draw)\r\n    if (uuid) return { uuid, name: draw.text }\r\n}\r\n","import { setFlag } from '@utils/foundry/flags'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { info, warn } from '@utils/foundry/notification'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { setSetting } from '@utils/foundry/settings'\r\nimport { createCustomActionsTable, createDefautActionsTable, getDefaultWorldTable, getTableSource } from './actions'\r\n\r\nexport const CREATE_TABLE_UUID = 'Compendium.pf2e-hero-actions.macros.SUXi4nhdJb8vZk58'\r\n\r\nconst localizeChoice = subLocalize('templates.createTable.choice')\r\nconst localizeDefaultConfirm = subLocalize('templates.createTable.default.confirm')\r\nconst localizeRemove = subLocalize('templates.removeActions')\r\n\r\nexport async function removeHeroActions() {\r\n    const template = templatePath('dialogs/remove-actions.hbs')\r\n\r\n    const buttons: Record<string, DialogButton> = {\r\n        yes: {\r\n            label: localizeRemove('remove'),\r\n            icon: '<i class=\"fas fa-trash\"></i>',\r\n            callback: html =>\r\n                html\r\n                    .find<HTMLInputElement>('input[name=\"actor\"]:checked')\r\n                    .toArray()\r\n                    .map(x => game.actors.get(x.value))\r\n                    .filter(x => x),\r\n        },\r\n        no: {\r\n            label: localizeRemove('cancel'),\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            callback: () => [],\r\n        },\r\n    }\r\n\r\n    const data: DialogData = {\r\n        content: await renderTemplate(template, {\r\n            actors: game.actors.filter(x => x.type === 'character'),\r\n            i18n: localizeRemove,\r\n        }),\r\n        title: localizeRemove('title'),\r\n        buttons,\r\n        default: 'yes',\r\n        render: html => {\r\n            html.on('change', 'input[name=\"all\"]', () => removeActionsToggleAll(html))\r\n            html.on('change', 'input[name=\"actor\"]', () => removeActionsToggleActor(html))\r\n        },\r\n        close: () => [],\r\n    }\r\n\r\n    const actors = await Dialog.wait(data, undefined, { id: 'pf2e-hero-actions-remove-actions' })\r\n    if (!actors.length) {\r\n        return warn('templates.removeActions.noSelection')\r\n    }\r\n\r\n    for (const actor of actors) {\r\n        await setFlag(actor, 'heroActions', [])\r\n    }\r\n\r\n    info('templates.removeActions.removed')\r\n}\r\n\r\nfunction removeActionsToggleAll(html: JQuery) {\r\n    const state = html.find<HTMLInputElement>('input[name=\"all\"]')[0]!.checked\r\n    html.find('input[name=\"actor\"]').prop('checked', state)\r\n}\r\n\r\nfunction removeActionsToggleActor(html: JQuery) {\r\n    const actors = html.find('input[name=\"actor\"]')\r\n    const checked = actors.filter(':checked')\r\n    const all = html.find('input[name=\"all\"]')\r\n\r\n    if (actors.length === checked.length) {\r\n        all.prop('checked', true).prop('indeterminate', false)\r\n        actors.prop('checked', true)\r\n    } else if (!checked.length) {\r\n        all.prop('checked', false).prop('indeterminate', false)\r\n        actors.prop('checked', false)\r\n    } else {\r\n        all.prop('checked', false).prop('indeterminate', true)\r\n    }\r\n}\r\n\r\nexport async function createTable() {\r\n    const template = templatePath('dialogs/create-table.hbs')\r\n\r\n    const buttons: Record<string, DialogButton> = {\r\n        yes: {\r\n            label: localizeChoice('create'),\r\n            icon: '<i class=\"fas fa-border-all\"></i>',\r\n            callback: html => {\r\n                const type = html.find('.window-content input[name=\"type\"]:checked').val()\r\n                const unique = html.find('.window-content input[name=\"draw\"]:checked').val() === 'unique'\r\n                return { type, unique }\r\n            },\r\n        },\r\n        no: {\r\n            label: localizeChoice('cancel'),\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            callback: () => null,\r\n        },\r\n    }\r\n\r\n    const data: DialogData = {\r\n        content: await renderTemplate(template, { i18n: localizeChoice }),\r\n        title: localizeChoice('title'),\r\n        buttons,\r\n        default: 'yes',\r\n        close: () => null,\r\n    }\r\n\r\n    const result = await Dialog.wait(data, undefined, { id: 'pf2e-hero-actions-create-table' })\r\n    if (!result) return\r\n\r\n    if (result.type === 'default') createDefaultTable(result.unique)\r\n    else createCustomTable(result.unique)\r\n}\r\n\r\nasync function createDefaultTable(unique: boolean) {\r\n    let table = await getDefaultWorldTable()\r\n\r\n    if (table) {\r\n        const override = await Dialog.confirm({\r\n            title: localizeDefaultConfirm('title'),\r\n            content: localizeDefaultConfirm('content'),\r\n        })\r\n\r\n        if (override) {\r\n            const update = getTableSource(unique)\r\n            await table.update(update)\r\n            return setTable(table, true)\r\n        }\r\n    }\r\n\r\n    table = await createDefautActionsTable(unique)\r\n    await setTable(table)\r\n}\r\n\r\nasync function createCustomTable(unique: boolean) {\r\n    const table = await createCustomActionsTable(unique)\r\n    await setTable(table)\r\n    table.sheet?.render(true)\r\n}\r\n\r\nasync function setTable(table: RollTable, normalize = false) {\r\n    if (normalize) await table.normalize()\r\n    await setSetting('tableUUID', table.uuid)\r\n}\r\n","import { getFlag, setFlag } from '@utils/foundry/flags'\r\nimport { localize } from '@utils/foundry/localize'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { socketEmit } from '@utils/socket'\r\n\r\nexport async function onTradeRequest(trade: BaseTrade) {\r\n    const { sender, receiver } = trade\r\n    const senderActor = game.actors.get(sender.cid)\r\n    const receiverActor = game.actors.get(receiver.cid)\r\n\r\n    if (!senderActor || !receiverActor) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    let content = `<p>${localize('trade-request.header', { sender: senderActor.name, receiver: receiverActor.name })}</p>`\r\n    content += `<p>${localize('trade-request.give', { give: chatUUID(sender.uuid) })}</p>`\r\n    content += `<p>${localize('trade-request.want', { want: chatUUID(receiver.uuid) })}</p>`\r\n    content += `<p style=\"margin-bottom: 1em;\">${localize('trade-request.accept')}</p>`\r\n\r\n    const accept = await Dialog.confirm({\r\n        title: localize('trade-request.title'),\r\n        content: await TextEditor.enrichHTML(content, { async: true }),\r\n    })\r\n\r\n    if (accept) acceptRequest(trade)\r\n    else rejectRequest(trade)\r\n}\r\n\r\nexport async function onTradeAccepted(trade: BaseTrade) {\r\n    const { sender, receiver } = trade\r\n    const senderActor = game.actors.get(sender.cid)\r\n    const receiverActor = game.actors.get(receiver.cid)\r\n\r\n    if (!senderActor || !receiverActor) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    const senderActions = getFlag<HeroAction[]>(senderActor, 'heroActions') ?? []\r\n    const receiverActions = getFlag<HeroAction[]>(receiverActor, 'heroActions') ?? []\r\n\r\n    const senderActionIndex = senderActions.findIndex(x => x.uuid === sender.uuid)\r\n    const receiverActionIndex = receiverActions.findIndex(x => x.uuid === receiver.uuid)\r\n\r\n    if (senderActionIndex === -1 || receiverActionIndex === -1) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    const senderAction = senderActions.splice(senderActionIndex, 1)[0]!\r\n    const receiverAction = receiverActions.splice(receiverActionIndex, 1)[0]!\r\n\r\n    senderActions.push(receiverAction)\r\n    receiverActions.push(senderAction)\r\n\r\n    setFlag(senderActor, 'heroActions', senderActions)\r\n    setFlag(receiverActor, 'heroActions', receiverActions)\r\n\r\n    let content = `<div>${localize('trade-success.offer', { offer: chatUUID(senderAction.uuid) })}</div>`\r\n    content += `<div>${localize('trade-success.receive', { receive: chatUUID(receiverAction.uuid) })}</div>`\r\n\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('trade-success.header', { name: receiverActor.name })}</h4>`,\r\n        content,\r\n        speaker: ChatMessage.getSpeaker({ actor: senderActor }),\r\n    })\r\n}\r\n\r\nexport async function onTradeRejected({ receiver }: BaseTrade) {\r\n    const actor = game.actors.get(receiver.cid)!\r\n    warn('trade-rejected', { name: actor.name }, true)\r\n}\r\n\r\nexport function onTradeError(err: string) {\r\n    error('trade-error')\r\n}\r\n\r\nexport function sendTradeRequest(trade: BaseTrade) {\r\n    if (trade.receiver.id === game.user.id) {\r\n        acceptRequest(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit<TradeRequestPacket>({\r\n        ...trade,\r\n        type: 'trade-request',\r\n    })\r\n}\r\n\r\nfunction rejectRequest(trade: BaseTrade) {\r\n    if (trade.sender.id === game.user.id) {\r\n        onTradeRejected(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit<TradeRejectPacket>({\r\n        ...trade,\r\n        type: 'trade-reject',\r\n    })\r\n}\r\n\r\nfunction acceptRequest(trade: BaseTrade) {\r\n    if (game.user.isGM) {\r\n        onTradeAccepted(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit<TradeAcceptPacket>({\r\n        ...trade,\r\n        type: 'trade-accept',\r\n    })\r\n}\r\n\r\nfunction sendTradeError({ sender, receiver }: BaseTrade, error: TradeError = 'trade-error') {\r\n    const users = new Set([sender.id, receiver.id])\r\n\r\n    if (users.has(game.user.id)) {\r\n        users.delete(game.user.id)\r\n        onTradeError(error)\r\n    }\r\n\r\n    if (!users.size) return\r\n\r\n    socketEmit<TradeErrorPacket>({\r\n        type: 'trade-error',\r\n        users: Array.from(users),\r\n        error,\r\n    })\r\n}\r\n","import { getHeroActions } from '@src/actions'\r\nimport { sendTradeRequest } from '@src/trade'\r\nimport { getCharacterOwner } from '@utils/foundry/actor'\r\nimport { localize, subLocalize } from '@utils/foundry/localize'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getFirstGM, getOwner } from '@utils/foundry/user'\r\n\r\nexport class Trade extends Application {\r\n    private _actor: CharacterPF2e\r\n    private _target?: CharacterPF2e\r\n\r\n    constructor(actor: CharacterPF2e) {\r\n        super({ id: `pf2e-hero-actions-trade-${actor.id}` })\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions(): ApplicationOptions {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('templates.trade.title'),\r\n            template: templatePath('trade.hbs'),\r\n            width: 600,\r\n            height: 'auto',\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    get target() {\r\n        return this._target\r\n    }\r\n\r\n    set target(value) {\r\n        if (!value) {\r\n            error('templates.trade.no-target')\r\n            return\r\n        }\r\n        if (value === this._target) return\r\n        delete this.target?.apps?.[this.appId]\r\n        this._target = value\r\n        this.render()\r\n    }\r\n\r\n    getData(options?: Partial<ApplicationOptions> | undefined): object | Promise<object> {\r\n        return mergeObject(super.getData(), {\r\n            actor: this.actor,\r\n            target: this.target,\r\n            targets: game.actors.filter(x => x.type === 'character' && x.id !== this.actor.id && x.hasPlayerOwner),\r\n            actions: getHeroActions(this.actor),\r\n            targetActions: this.target ? getHeroActions(this.target) : [],\r\n            i18n: subLocalize('templates.trade'),\r\n        })\r\n    }\r\n\r\n    activateListeners(html: JQuery<HTMLElement>): void {\r\n        super.activateListeners(html)\r\n        html.find('select[name=\"target\"]').on('change', this.#onChangeTarget.bind(this))\r\n        html.find('[data-action=\"description\"]').on('click', this.#onDescription.bind(this))\r\n        html.find('[data-action=\"trade\"]').on('click', this.#onSendTrade.bind(this))\r\n        html.find('[data-action=\"cancel\"]').on('click', () => this.close())\r\n    }\r\n\r\n    render(force?: boolean | undefined, options?: RenderOptions | undefined): this | Promise<this> {\r\n        this.actor.apps[this.appId] = this\r\n        if (this.target) this.target.apps[this.appId] = this\r\n        return super.render(force, options)\r\n    }\r\n\r\n    async close(options?: ({ force?: boolean | undefined } & Record<string, unknown>) | undefined): Promise<void> {\r\n        await super.close(options)\r\n        delete this.actor.apps?.[this.appId]\r\n        delete this.target?.apps?.[this.appId]\r\n    }\r\n\r\n    #onSendTrade() {\r\n        if (!this.target) {\r\n            warn('templates.trade.no-target')\r\n            return\r\n        }\r\n\r\n        const action = this.element.find('[name=\"action\"]:checked').val()\r\n        const target = this.element.find('[name=\"targetAction\"]:checked').val()\r\n\r\n        if (typeof action !== 'string' || typeof target !== 'string') {\r\n            warn('templates.trade.no-select')\r\n            return\r\n        }\r\n\r\n        let user = getCharacterOwner(this.target, true) ?? getOwner(this.target, true) ?? getFirstGM()\r\n        if (!user) {\r\n            warn('templates.trade.no-user')\r\n            return\r\n        }\r\n\r\n        sendTradeRequest({\r\n            sender: {\r\n                id: game.user.id,\r\n                cid: this.actor.id,\r\n                uuid: action,\r\n            },\r\n            receiver: {\r\n                id: user.id,\r\n                cid: this.target.id,\r\n                uuid: target,\r\n            },\r\n        })\r\n\r\n        this.close()\r\n    }\r\n\r\n    async #onDescription(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n        const uuid = $(event.currentTarget).siblings('input').val() as CompendiumUUID\r\n        const entry = await fromUuid<JournalEntry>(uuid)\r\n        entry?.sheet.render(true)\r\n    }\r\n\r\n    #onChangeTarget(event: JQuery.ChangeEvent<any, any, HTMLElement>) {\r\n        const id = (event.currentTarget as HTMLSelectElement).value\r\n        this.target = game.actors.get<CharacterPF2e>(id)\r\n    }\r\n}\r\n","export function getCharacterOwner(actor: Actor, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && x.character === actor)\r\n    return game.users.find(x => x.character === actor)\r\n}\r\n\r\nexport function getActorTokens(actor: Actor, linkedOnly = false) {\r\n    return game.scenes.map(scene => getActorSceneTokens(scene, actor, linkedOnly)).flat()\r\n}\r\n\r\nexport function getActorSceneTokens(scene: Scene, actor: Actor, linkedOnly = false) {\r\n    return scene.tokens.filter(token => token.actorId === actor.id && (!linkedOnly || token.actorLink))\r\n}\r\n","export function isFirstGM() {\r\n    if (!game.user.isGM) return false\r\n    const firstGM = game.users.find(user => user.active && user.isGM)\r\n    return game.user === firstGM\r\n}\r\n\r\nexport function getFirstGM() {\r\n    return game.users.find(user => user.active && user.isGM)\r\n}\r\n\r\nexport function isGM() {\r\n    const data = game.data as Game['data'] & { userId: string }\r\n    const user = data.users.find(x => x._id === data.userId)\r\n    return !!user && user.role >= CONST.USER_ROLES.GAMEMASTER\r\n}\r\n\r\nexport function getOwners(doc: FoundryDocument, connected = false) {\r\n    if (connected) return game.users.filter(x => x.active && doc.testUserPermission(x, 'OWNER'))\r\n    return game.users.filter(x => doc.testUserPermission(x, 'OWNER'))\r\n}\r\n\r\nexport function getOwner(doc: FoundryDocument, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && doc.testUserPermission(x, 'OWNER'))\r\n    return game.users.find(x => doc.testUserPermission(x, 'OWNER'))\r\n}\r\n","import { Trade } from '@apps/trade'\r\nimport { getFlag } from '@utils/foundry/flags'\r\nimport { localize, subLocalize } from '@utils/foundry/localize'\r\nimport { error, warn } from '@utils/foundry/notification'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { chatUUID } from '@utils/foundry/uuid'\r\nimport { drawHeroAction, getHeroActionDetails, getHeroActions, setHeroActions, useHeroAction } from './actions'\r\n\r\nexport async function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, $html: JQuery) {\r\n    const actor = sheet.actor\r\n    if (actor.pack || !actor.id || !game.actors.has(actor.id)) return\r\n    await addHeroActions($html, actor)\r\n    addEvents($html, actor)\r\n}\r\n\r\nasync function addHeroActions(html: JQuery, actor: CharacterPF2e) {\r\n    const actions = getHeroActions(actor)\r\n    const diff = actor.heroPoints.value - actions.length\r\n    const isOwner = actor.isOwner\r\n    const localize = subLocalize('templates.heroActions')\r\n\r\n    const template = await renderTemplate(templatePath('sheet.hbs'), {\r\n        owner: isOwner,\r\n        list: actions,\r\n        canUse: diff >= 0 && isOwner,\r\n        canDraw: diff > 0 && isOwner,\r\n        canTrade: getSetting('trade'),\r\n        mustDiscard: diff < 0,\r\n        diff: Math.abs(diff),\r\n        i18n: (key: string, { hash }: { hash: Record<string, string> }) => localize(key, hash),\r\n    })\r\n\r\n    html.find(\r\n        '.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter] > .strikes-list:not(.skill-action-list)'\r\n    )\r\n        .first()\r\n        .after(template)\r\n}\r\n\r\nfunction addEvents(html: JQuery, actor: CharacterPF2e) {\r\n    const $list = html.find('.tab.actions .heroActions-list')\r\n    $list.find('[data-action=draw]').on('click', event => onClickHeroActionsDraw(actor, event))\r\n    $list.find('[data-action=expand]').on('click', onClickHeroActionExpand)\r\n    $list.find('[data-action=use]').on('click', event => onClickHeroActionUse(actor, event))\r\n    $list.find('[data-action=display]').on('click', event => onClickHeroActionDisplay(actor, event))\r\n    $list.find('[data-action=discard]').on('click', onClickHeroActionDiscard)\r\n    $list.find('[data-action=discard-selected]').on('click', () => onClickHeroActionsDiscard(actor, html))\r\n    html.find('[data-action=hero-actions-trade]').on('click', () => onClickHeroActionsTrade(actor))\r\n}\r\n\r\nfunction onClickHeroActionsTrade(actor: CharacterPF2e) {\r\n    const actions = getFlag<Array<any>>(actor, 'heroActions')\r\n    if (!actions || !actions.length) {\r\n        warn('no-action')\r\n        return\r\n    }\r\n\r\n    const diff = actions.length - actor.heroPoints.value\r\n    if (diff > 0) {\r\n        warn('no-points', { nb: diff.toString() })\r\n        return\r\n    }\r\n\r\n    new Trade(actor).render(true)\r\n}\r\n\r\nasync function onClickHeroActionExpand(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n\r\n    const $action = $(event.currentTarget).closest('.action')\r\n    const $summary = $action.find('.item-summary')\r\n\r\n    if (!$summary.hasClass('loaded')) {\r\n        const uuid = $action.attr('data-uuid')!\r\n        const details = await getHeroActionDetails(uuid)\r\n        if (!details) return\r\n\r\n        const text = await TextEditor.enrichHTML(details.description, { async: true })\r\n\r\n        $summary.find('.item-description').html(text)\r\n        $summary.addClass('loaded')\r\n    }\r\n\r\n    $action.toggleClass('expanded')\r\n}\r\n\r\nasync function onClickHeroActionDisplay(actor: CharacterPF2e, event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n\r\n    const uuid = $(event.currentTarget).closest('.action').attr('data-uuid')!\r\n    const details = await getHeroActionDetails(uuid)\r\n    if (!details) return error('details.missing')\r\n\r\n    ChatMessage.create({\r\n        content: `<h2>${details.name}</h2>${details.description}`,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n\r\nfunction onClickHeroActionDiscard(event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n\r\n    const action = $(event.currentTarget).closest('.action')\r\n    const list = action.closest('.heroActions-list')\r\n\r\n    action.toggleClass('discarded')\r\n\r\n    const toDiscard = Number(list.attr('data-discard') ?? '0')\r\n    const $discarded = list.find('.action.discarded')\r\n\r\n    list.toggleClass('discardable', $discarded.length === toDiscard)\r\n}\r\n\r\nasync function onClickHeroActionsDiscard(actor: CharacterPF2e, html: JQuery) {\r\n    const discarded = html.find('.tab.actions .heroActions-list .action.discarded')\r\n    const uuids = discarded.toArray().map(x => x.dataset.uuid)\r\n    const actions = getHeroActions(actor)\r\n    const removed: HeroAction[] = []\r\n\r\n    for (const uuid of uuids) {\r\n        const index = actions.findIndex(x => x.uuid === uuid)\r\n        if (index === -1) continue\r\n        removed.push(actions[index]!)\r\n        actions.splice(index, 1)\r\n    }\r\n\r\n    setHeroActions(actor, actions)\r\n\r\n    const display = removed.map(x => chatUUID(x.uuid, x.name))\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('actions-discard.header', { nb: display.length })}</h4>`,\r\n        content: display.map(x => `<div>${x}</div>`).join(''),\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n\r\nasync function onClickHeroActionsDraw(actor: CharacterPF2e, event: JQuery.ClickEvent) {\r\n    event.preventDefault()\r\n\r\n    const actions = getHeroActions(actor)\r\n    const nb = actor.heroPoints.value - actions.length\r\n\r\n    const drawn = /** @type {HeroAction[]} */ []\r\n    for (let i = 0; i < nb; i++) {\r\n        const action = await drawHeroAction()\r\n\r\n        if (action === undefined) continue\r\n        else if (action === null) return\r\n\r\n        actions.push(action)\r\n        drawn.push(action)\r\n    }\r\n\r\n    if (!drawn.length) return\r\n\r\n    setHeroActions(actor, actions)\r\n\r\n    const display = drawn.map(x => chatUUID(x.uuid, x.name))\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('actions-draw.header', { nb: display.length })}</h4>`,\r\n        content: display.map(x => `<div>${x}</div>`).join(''),\r\n        speaker: ChatMessage.getSpeaker({ actor: actor as Actor }),\r\n    })\r\n}\r\n\r\nasync function onClickHeroActionUse(actor: CharacterPF2e, event: JQuery.ClickEvent<any, any, HTMLElement>) {\r\n    event.preventDefault()\r\n    const uuid = $(event.currentTarget).closest('.action').attr('data-uuid')!\r\n    useHeroAction(actor, uuid)\r\n}\r\n\r\nexport function refreshSheets() {\r\n    Object.values(ui.windows).forEach(x => {\r\n        if (x instanceof ActorSheet && x.actor.type === 'character') {\r\n            x.render(true)\r\n        }\r\n    })\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { socketOn } from '@utils/socket'\r\nimport { registerSetting } from '@utils/foundry/settings'\r\nimport { getCurrentModule } from '@utils/foundry/module'\r\nimport { isFirstGM } from '@utils/foundry/user'\r\nimport { createTable, removeHeroActions } from './api'\r\nimport { getHeroActions, useHeroAction } from './actions'\r\nimport { refreshSheets, renderCharacterSheetPF2e } from './sheet'\r\nimport { onTradeAccepted, onTradeError, onTradeRejected, onTradeRequest } from './trade'\r\n\r\nexport const MODULE_ID = 'pf2e-hero-actions'\r\nsetModuleID(MODULE_ID)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nHooks.once('init', () => {\r\n    registerSetting({\r\n        name: 'tableUUID',\r\n        type: String,\r\n        default: '',\r\n        config: true,\r\n    })\r\n\r\n    registerSetting({\r\n        name: 'trade',\r\n        type: Boolean,\r\n        default: false,\r\n        config: true,\r\n        onChange: refreshSheets,\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    socketOn(onPacketReceived)\r\n\r\n    if (!game.user.isGM) return\r\n\r\n    getCurrentModule<HeroActionsApi>().api = {\r\n        createTable,\r\n        removeHeroActions,\r\n        getHeroActions,\r\n        useHeroAction,\r\n    }\r\n})\r\n\r\nfunction onPacketReceived(packet: Packet) {\r\n    switch (packet.type) {\r\n        case 'trade-reject':\r\n            if (packet.sender.id !== game.user.id) return\r\n            onTradeRejected(packet)\r\n            break\r\n        case 'trade-accept':\r\n            if (!isFirstGM()) return\r\n            onTradeAccepted(packet)\r\n            break\r\n        case 'trade-request':\r\n            if (packet.receiver.id !== game.user.id) return\r\n            onTradeRequest(packet)\r\n            break\r\n        case 'trade-error':\r\n            if (!packet.users.includes(game.user.id)) return\r\n            onTradeError(packet.error)\r\n            break\r\n    }\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions' | 'pf2e-dailies'\r\n\r\ntype ReturnedModule<TApi extends ModuleApi = ModuleApi> = Module<TApi> | undefined\r\ntype ReturnedModuleApi<TApi extends Record<string, any>> = Module<TApi>['api'] | undefined\r\n\r\nexport function getModule<T extends ModuleApi = ModuleApi>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<TApi extends ModuleApi = ModuleApi>() {\r\n    return getModule(MODULE_ID) as Module<TApi>\r\n}\r\n\r\nexport function getModuleApi<TApi extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<TApi>(id)?.api as ReturnedModuleApi<TApi>\r\n}\r\n"],"names":["socketEmit","packet","game","socket","emit","path","join","flagsUpdatePath","templatePath","filter","x","getSetting","key","settings","get","registerSetting","options","name","scope","config","hint","Array","isArray","choices","reduce","choice","register","getFlag","doc","fallback","setFlag","value","notify","str","arg1","arg2","arg3","type","data","undefined","permanent","ui","notifications","localize","warn","args","info","error","i18n","format","subLocalize","subKey","fn","Object","defineProperties","enumerable","configurable","has","hasLocalization","localizePath","template","hash","chatUUID","uuid","DECK_PACK","TABLE_UUID","ICON","async","getTableFromUuid","table","fromUuid","RollTable","getDefaultWorldTable","tables","find","getHeroActions","actor","actions","pack","packs","map","action","entry","index","_id","useHeroAction","points","heroPoints","findIndex","details","getHeroActionDetails","splice","update","ChatMessage","create","flavor","content","description","speaker","getSpeaker","document","JournalEntry","page","pages","contents","text","replace","setHeroActions","getTableSource","unique","source","replacement","img","mergeObject","duplicate","_source","drawHeroAction","getCustomTable","getDefaultCompendiumTable","getDeckTable","formula","user","isGM","compendium","normalize","results","some","r","drawn","resetResults","draw","displayChat","result","CONST","TABLE_RESULT_TYPES","DOCUMENT","documentCollection","documentId","COMPENDIUM","localizeChoice","localizeDefaultConfirm","localizeRemove","removeHeroActions","buttons","yes","label","icon","callback","html","toArray","actors","no","renderTemplate","title","default","render","on","state","checked","prop","removeActionsToggleAll","all","length","removeActionsToggleActor","close","Dialog","wait","id","createTable","val","confirm","setTable","temporary","createDefautActionsTable","createDefaultTable","createCustomActionsTable","sheet","createCustomTable","set","onTradeAccepted","trade","sender","receiver","senderActor","cid","receiverActor","sendTradeError","senderActions","receiverActions","senderActionIndex","receiverActionIndex","senderAction","receiverAction","push","offer","receive","onTradeRejected","onTradeError","err","acceptRequest","users","Set","delete","size","from","Trade","Application","_actor","_target","constructor","super","this","defaultOptions","width","height","target","apps","appId","getData","targets","hasPlayerOwner","targetActions","activateListeners","bind","force","element","connected","active","character","getCharacterOwner","testUserPermission","getOwner","event","$","currentTarget","siblings","onClickHeroActionExpand","preventDefault","$action","closest","$summary","hasClass","attr","TextEditor","enrichHTML","addClass","toggleClass","onClickHeroActionDiscard","list","toDiscard","Number","$discarded","refreshSheets","values","windows","forEach","ActorSheet","onPacketReceived","firstGM","isFirstGM","give","want","rejectRequest","onTradeRequest","includes","isSystem","setModuleID","Hooks","$html","diff","isOwner","owner","canUse","canDraw","canTrade","mustDiscard","Math","abs","first","after","addHeroActions","$list","nb","i","display","onClickHeroActionsDraw","onClickHeroActionUse","onClickHeroActionDisplay","uuids","dataset","removed","onClickHeroActionsDiscard","toString","onClickHeroActionsTrade","addEvents","once","String","Boolean","onChange","modules","api"],"sourceRoot":""}